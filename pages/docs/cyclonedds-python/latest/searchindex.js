Search.setIndex({"docnames": ["api", "cyclonedds.builtin", "cyclonedds.core", "cyclonedds.domain", "cyclonedds.dynamic", "cyclonedds.idl", "cyclonedds.internal", "cyclonedds.pub", "cyclonedds.qos", "cyclonedds.sub", "cyclonedds.topic", "cyclonedds.util", "idl", "index", "intro", "tools", "tools.ddsls", "tools.pubsub"], "filenames": ["api.rst", "cyclonedds.builtin.rst", "cyclonedds.core.rst", "cyclonedds.domain.rst", "cyclonedds.dynamic.rst", "cyclonedds.idl.rst", "cyclonedds.internal.rst", "cyclonedds.pub.rst", "cyclonedds.qos.rst", "cyclonedds.sub.rst", "cyclonedds.topic.rst", "cyclonedds.util.rst", "idl.rst", "index.rst", "intro.rst", "tools.rst", "tools.ddsls.rst", "tools.pubsub.rst"], "titles": ["API", "builtin", "core", "domain", "dynamic", "idl", "internal", "pub", "core", "sub", "topic", "util", "Working with IDL", "Eclipse Cyclone DDS: Python API documentation", "Introduction", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">cyclonedds</span></code> command line tool", "Command line tool: ddsls", "Command line tool: pubsub"], "terms": {"builtin": [0, 13], "core": [0, 1, 9, 13], "domain": [0, 1, 2, 9, 10, 13, 14], "dynam": [0, 6, 13, 15], "idl": [0, 13, 14, 15], "intern": [0, 2, 11, 13], "pub": [0, 2, 13, 14], "sub": [0, 1, 2, 13, 14], "topic": [0, 1, 2, 4, 6, 7, 8, 9, 13, 14, 15], "util": [0, 13, 14], "eclips": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17], "cyclon": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17], "dd": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 17], "2025": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "committ": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "11": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "class": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 14], "cyclonedd": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16], "builtindataread": [1, 13], "subscriber_or_particip": [1, 9], "builtin_top": 1, "qo": [1, 2, 3, 7, 8, 9, 10, 13, 15, 16], "none": [1, 2, 3, 5, 7, 8, 9, 10], "listen": [1, 2, 3, 7, 9, 10, 13, 14], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14], "base": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12], "dataread": [1, 2, 9, 13, 14, 17], "have": [1, 2, 11, 12, 13, 14, 15, 16, 17], "sligtli": 1, "differ": [1, 12], "behaviour": 1, "than": [1, 2, 3, 9, 15, 16, 17], "normal": [1, 12], "so": [1, 2, 9, 12, 17], "you": [1, 2, 8, 9, 11, 12, 13, 14, 15, 16, 17], "should": [1, 2, 5, 8, 12, 14], "us": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "thi": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17], "instead": [1, 16], "thei": [1, 2, 11, 12, 16], "ar": [1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17], "ident": 1, "rest": 1, "function": [1, 2, 6, 7, 8, 10, 11, 12], "paramet": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "union": [1, 4, 6, 7, 8, 9], "subscrib": [1, 2, 9, 13, 16, 17], "domainparticip": [1, 2, 3, 4, 7, 9, 10, 13, 14, 16], "builtintop": [1, 13], "option": [1, 2, 3, 5, 7, 8, 9, 10, 11, 14, 16, 17], "__init__": [1, 2, 8], "initi": [1, 2, 8, 12], "The": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "which": [1, 2, 9, 12, 14, 15, 16, 17], "reader": [1, 2, 7, 9, 14, 16, 17], "ad": [1, 2], "If": [1, 2, 4, 8, 9, 10, 12, 14, 16, 17], "suppli": [1, 2, 9], "creat": [1, 2, 12, 16], "can": [1, 2, 4, 5, 8, 12, 14, 16, 17], "one": [1, 2, 9, 12, 15, 16], "builtintopicdcpsparticip": [1, 13, 16], "builtintopicdcpstop": [1, 13], "builtintopicdcpspubl": [1, 13, 16], "builtintopicdcpssubscript": [1, 13], "pleas": [1, 2], "note": [1, 2, 8, 12, 15], "fail": [1, 2], "built": [1, 7, 8, 9, 12, 14, 16], "without": [1, 2, 12], "discoveri": 1, "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "type": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17], "read": [1, 2, 9], "n": [1, 9, 12, 17], "1": [1, 2, 8, 9, 12, 16, 17], "condit": [1, 2, 9], "maximum": [1, 2, 7, 9, 12], "sampl": [1, 2, 5, 6, 7, 8, 9, 10, 16, 17], "non": [1, 2, 9, 12, 14], "block": [1, 2, 7, 9], "queri": [1, 9], "select": [1, 9, 16, 17], "interest": [1, 9], "int": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12], "number": [1, 2, 5, 7, 8, 9, 11, 12, 17], "readcondit": [1, 2, 9, 13], "querycondit": [1, 2, 9, 13], "onli": [1, 2, 6, 8, 9, 11, 12, 16, 17], "satisfi": [1, 9], "rais": [1, 2, 4, 7, 8, 9, 10, 11], "ddsexcept": [1, 2, 4, 7, 9, 10, 13], "ani": [1, 2, 3, 5, 8, 9, 10, 12, 13, 14, 17], "error": [1, 2, 9, 10, 12, 14], "code": [1, 2, 9, 10, 12], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "api": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17], "convert": [1, 2, 6, 8, 9, 10], "an": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 14, 16, 17], "except": [1, 2, 9, 10, 11, 12, 14], "take": [1, 2, 7, 9, 12, 13, 14], "dcpsparticip": [1, 13, 16], "kei": [1, 2, 5, 6, 8, 12, 16], "data": [1, 2, 5, 6, 7, 8, 9, 12, 15, 16], "when": [1, 2, 7, 8, 9, 14, 16, 17], "uuid": [1, 2, 6], "uniqu": [1, 2, 16], "particip": [1, 2, 3, 4, 8, 14, 15, 17], "identifi": [1, 2, 16], "polici": [1, 2, 8, 13, 16, 17], "associ": [1, 2, 6, 7], "dcpsendpoint": [1, 7, 9, 13], "participant_kei": [1, 16], "participant_instance_handl": [1, 16], "topic_nam": [1, 10, 16], "type_nam": [1, 16], "type_id": [1, 4], "str": [1, 2, 3, 4, 5, 8, 10, 12, 14, 17], "typeidentifi": [1, 4], "public": [1, 7, 15, 16, 17], "subscript": [1, 9, 16, 17], "endpoint": 1, "belong": [1, 2], "instanc": [1, 2, 6, 7, 8, 9, 12, 16, 17], "handl": [1, 2, 6, 7, 9, 16], "name": [1, 4, 5, 6, 8, 10, 12, 14, 16, 17], "typeid": 1, "complet": [1, 16], "xtype": [1, 15, 17], "_ref": 1, "data_typ": [1, 10], "repres": [1, 3, 8, 10, 15, 17], "magic": [1, 6], "refer": [1, 2, 6, 12, 15], "publish": [1, 2, 7, 9, 13, 14, 16, 17], "new": [1, 2, 16], "appear": [1, 4], "network": [1, 3, 4, 12, 14], "make": [1, 2, 6, 12, 14], "sure": 1, "ha": [1, 2, 12, 14, 16, 17], "been": [1, 2, 16], "denable_topic_discoveri": 1, "ON": 1, "enabletopicdiscoveryendpoint": 1, "set": [1, 2, 3, 4, 5, 7, 8, 10, 14, 15, 16, 17], "config": [1, 3], "happen": [1, 2, 7, 16], "kwarg": [2, 5, 8], "callback": 2, "contain": [2, 6, 8, 11, 12, 14], "entiti": [2, 3, 6, 7, 8, 9, 10, 11, 13, 15, 16], "object": [2, 5, 8, 11, 13], "overrid": [2, 14], "lambda": 2, "all": [2, 3, 4, 6, 7, 8, 9, 12, 13, 16, 17], "dispatch": 2, "synchron": 2, "from": [2, 7, 8, 9, 11, 12, 14, 15, 16, 17], "receiv": [2, 7, 9, 14], "thread": [2, 4, 7], "": [2, 7, 8, 9, 12, 13, 14, 15, 16, 17], "get": [2, 3, 5, 7, 9, 10, 12, 14, 16], "awai": 2, "do": [2, 8, 12, 17], "tini": 2, "amount": [2, 5], "process": [2, 8, 17], "method": [2, 6, 9, 12], "aquir": 2, "gil": 2, "sever": [2, 4, 12, 14, 16, 17], "hurt": 2, "your": [2, 3, 12, 13, 15, 16, 17], "perform": [2, 13, 14], "furthermor": 2, "delet": 2, "write": [2, 7, 8, 11, 12, 14], "insid": [2, 4, 12], "deadlock": 2, "on_data_avail": 2, "callabl": [2, 5, 10], "on_inconsistent_top": 2, "on_liveliness_lost": 2, "on_liveliness_chang": 2, "on_offered_deadline_miss": 2, "on_offered_incompatible_qo": 2, "on_data_on_read": 2, "on_sample_lost": 2, "on_sample_reject": 2, "on_requested_deadline_miss": 2, "on_requested_incompatible_qo": 2, "on_publication_match": 2, "on_subscription_match": 2, "reset": [2, 9], "copi": 2, "copy_to": 2, "merg": [2, 15], "configur": [2, 3, 6, 14, 16, 17], "default": [2, 5, 11, 12, 16, 17], "given": [2, 7], "self": 2, "replac": 2, "exist": [2, 12, 15, 17], "alreadi": [2, 12, 16], "statu": [2, 7, 9, 10], "inconsistent_topic_statu": [2, 6, 10], "set_on_inconsistent_top": 2, "set_on_data_avail": 2, "writer": [2, 7, 9, 14, 15, 16, 17], "datawrit": [2, 7, 13, 14, 17], "liveliness_lost_statu": [2, 6], "set_on_liveliness_lost": 2, "liveliness_changed_statu": [2, 6], "set_on_liveliness_chang": 2, "offered_deadline_missed_statu": [2, 6, 7], "set_on_offered_deadline_miss": 2, "offered_incompatible_qos_statu": [2, 6, 7], "set_on_offered_incompatible_qo": 2, "set_on_data_on_read": 2, "sample_lost_statu": [2, 6, 9], "set_on_sample_lost": 2, "sample_rejected_statu": [2, 6, 9], "set_on_sample_reject": 2, "requested_deadline_missed_statu": [2, 6, 9], "set_on_requested_deadline_miss": 2, "requested_incompatible_qos_statu": [2, 6, 9], "set_on_requested_incompatible_qo": 2, "publication_matched_statu": [2, 6, 7], "set_on_publication_match": 2, "subscription_matched_statu": [2, 6, 9], "set_on_subscription_match": 2, "guardcondit": [2, 13], "domain_particip": [2, 7, 9, 10], "A": [2, 3, 5, 7, 8, 9, 12, 15], "manual": [2, 12, 14, 17], "trigger": 2, "waitset": [2, 13], "activ": [2, 12, 16], "untrigg": 2, "bool": [2, 5, 6, 7, 8, 9, 10, 11], "wether": 2, "true": [2, 5, 8, 16, 17], "fals": [2, 8, 11, 16, 17], "next": 2, "call": [2, 6, 7, 9], "whether": [2, 10, 11, 16], "mask": [2, 5], "_condit": 2, "avail": [2, 13, 15, 17], "accord": [2, 16, 17], "construct": [2, 8, 12], "instancest": [2, 6, 7, 13], "viewstat": [2, 6, 13], "samplest": [2, 6, 13], "filter": [2, 10], "add": [2, 12, 14], "boolean": [2, 8, 17], "accept": [2, 12], "reject": [2, 9], "wai": [2, 12, 17], "provid": [2, 7, 9, 13, 15, 16, 17], "access": [2, 8, 12, 13], "event": [2, 16], "system": [2, 14, 15, 16, 17], "attach": [2, 6], "almost": [2, 13, 14], "kind": 2, "wait": [2, 7], "more": [2, 3, 9, 12, 15], "unblock": 2, "what": [2, 12, 14, 15, 16, 17], "depend": [2, 14, 15], "find": [2, 12], "out": [2, 17], "todo": [2, 8], "It": [2, 3, 8, 12, 13, 15, 17], "start": [2, 14, 16, 17], "empti": 2, "never": [2, 3, 8, 11], "want": [2, 12, 13, 14, 16, 17], "op": 2, "wa": [2, 6], "wish": [2, 14], "try": [2, 17], "detach": 2, "oper": [2, 7], "atom": 2, "could": 2, "still": 2, "occurr": 2, "right": 2, "after": [2, 12, 16, 17], "is_attach": 2, "check": [2, 8, 10, 11, 12, 16, 17], "get_ent": 2, "list": [2, 3, 5, 7, 8, 9, 15], "timeout": [2, 4, 7, 9, 14], "execut": 2, "nanosecond": [2, 6, 7, 8, 11], "durat": [2, 6, 7, 8, 11, 13, 14, 17], "human": [2, 7, 8, 11], "readabl": [2, 7, 8, 11], "format": [2, 7, 8, 11, 16, 17], "occur": [2, 12, 16], "wait_until": 2, "abstim": 2, "absolut": 2, "time": [2, 6, 8, 9, 11, 12, 13, 16, 17], "sinc": [2, 7, 11, 14, 16], "program": 2, "confirm": 2, "set_trigg": 2, "valu": [2, 5, 6, 7, 8, 9, 10, 12, 16, 17], "unlik": [2, 12], "would": [2, 8, 11, 12, 14], "need": [2, 8, 10, 12, 14, 16, 17], "async": [2, 4, 9], "wait_async": 2, "asynchron": 2, "loop": 2, "applic": [2, 3, 8, 13, 15, 17], "befor": 2, "By": [2, 12, 16, 17], "infin": 2, "constant": [2, 12], "build": [2, 14, 15], "static": [2, 8], "instanti": [2, 8], "state": [2, 17], "aliv": [2, 16], "consid": 2, "notalivedispos": [2, 7], "becaus": 2, "dispos": [2, 7, 16], "notalivenowrit": 2, "ignor": [2, 17], "liveli": [2, 6, 8, 16, 17], "newli": [2, 8], "old": [2, 16], "previous": 2, "fact": 2, "singl": [2, 5, 14], "notread": 2, "unread": 2, "ddsstatu": [2, 13], "inconsistenttop": 2, "offereddeadlinemiss": 2, "requesteddeadlinemiss": 2, "offeredincompatibleqo": 2, "requestedincompatibleqo": 2, "samplelost": 2, "samplereject": 2, "dataonread": 2, "dataavail": 2, "livelinesslost": 2, "livelinesschang": 2, "publicationmatch": 2, "subscriptionmatch": 2, "14": 2, "ref": [2, 15], "lifetim": 2, "underli": 2, "link": [2, 14], "retriev": [2, 8], "proxi": 2, "get_subscrib": 2, "get_publish": 2, "get_dataread": 2, "guid": [2, 6, 16], "global": [2, 16], "get_guid": 2, "status_mask": 2, "bit": [2, 5, 12], "form": 2, "set_status_mask": 2, "parent": [2, 12], "For": [2, 12, 14, 15, 16, 17], "exampl": [2, 8, 11, 12, 13, 15, 16, 17], "get_par": 2, "get_particip": [2, 3], "children": 2, "opposit": 2, "get_children": 2, "domain_id": [2, 3], "id": [2, 3, 12, 13], "we": [2, 12, 13, 14], "retain": 2, "avoid": 2, "being": [2, 16], "garbag": 2, "collect": [2, 8], "goe": 2, "scope": [2, 8], "doesn": 2, "t": [2, 5, 14, 16, 17], "don": [2, 14], "freed": 2, "caus": 2, "c": [2, 5, 6, 12, 13, 14], "memori": [2, 13, 14], "segfault": 2, "invalid": 2, "pass": [2, 8, 12], "mean": [2, 5, 12, 14, 16], "some": [2, 4, 11, 13, 17], "other": [2, 3, 12, 14, 16, 17], "Not": [2, 12], "mai": [2, 9, 17], "get_instance_handl": 2, "integ": [2, 3, 5, 8, 17], "just": [2, 12, 14, 16], "properti": [2, 5, 7, 8, 9, 10, 15, 16, 17], "instance_handl": [2, 6, 9], "view": [2, 15, 16, 17], "document": [2, 12, 14], "detail": 2, "usag": [2, 13], "read_statu": 2, "were": 2, "take_statu": 2, "again": [2, 8, 14], "get_status_chang": 2, "chang": [2, 8, 12, 16, 17], "last": [2, 17], "get_status_mask": 2, "enabl": [2, 6, 12, 16], "track": 2, "get_qo": 2, "same": [2, 8, 9, 12, 14, 16], "modif": 2, "doe": [2, 4, 8, 9, 14], "modifi": [2, 8, 17], "set_qo": 2, "limit": [2, 12, 16, 17], "latencybudget": [2, 8, 16, 17], "ownershipstrength": [2, 8, 16, 17], "explicitli": 2, "remain": 2, "unchang": 2, "appli": [2, 12, 16, 17], "immut": [2, 8, 12], "total": [2, 8], "becom": 2, "inconsist": 2, "get_listen": 2, "set_listen": 2, "addit": [2, 14, 16, 17], "updat": 2, "field": [2, 12, 16], "overwritten": [2, 8], "remov": [2, 9], "futur": [2, 17], "affect": 2, "current": [2, 11, 12, 14, 15, 16], "through": [2, 13], "won": [2, 17], "etc": [2, 17], "work": [2, 4, 8], "valid": [2, 11], "get_domain_id": 2, "resid": 2, "begin_coher": 2, "begin": 2, "coher": 2, "invok": 2, "behav": 2, "its": [2, 7], "respect": [2, 16, 17], "end_coher": 2, "end": [2, 15, 17], "classmethod": [2, 5, 8, 12], "entity_id": 2, "turn": [2, 12], "shouldn": 2, "msg": [2, 14], "thrown": 2, "indic": [2, 5, 12, 16, 17], "print": [2, 12, 14, 16, 17], "directli": [2, 12, 14], "string": [2, 5, 8, 17], "descript": [2, 7, 8, 9, 12], "One": 2, "dds_retcode_": 2, "where": [2, 12], "dds_retcode_ok": 2, "dds_retcode_error": 2, "dds_retcode_unsupport": 2, "2": [2, 8, 11, 17], "dds_retcode_bad_paramet": 2, "3": [2, 12, 13, 14, 16, 17], "dds_retcode_precondition_not_met": 2, "4": [2, 12, 17], "dds_retcode_out_of_resourc": 2, "5": [2, 8, 12, 14, 17], "dds_retcode_not_en": 2, "6": 2, "dds_retcode_immutable_polici": 2, "7": [2, 13, 14], "dds_retcode_inconsistent_polici": 2, "8": [2, 5, 12, 17], "dds_retcode_already_delet": 2, "9": [2, 12], "dds_retcode_timeout": 2, "10": [2, 8, 11, 12, 15, 16, 17], "dds_retcode_no_data": 2, "dds_retcode_illegal_oper": 2, "12": [2, 12], "dds_retcode_not_allowed_by_secur": 2, "13": 2, "error_message_map": 2, "insuffici": 2, "credenti": 2, "expect": 2, "attempt": [2, 4], "made": 2, "someth": [2, 8, 13], "onc": [2, 9], "featur": [2, 14], "lack": 2, "resourc": [2, 13], "precondit": 2, "met": 2, "bad": 2, "unsupport": 2, "specif": [2, 6, 12, 14, 15, 16, 17], "success": 2, "statist": [2, 6, 13], "opaqu": [2, 6], "stamp": 2, "lastest": 2, "refresh": 2, "epoch": [2, 7, 11], "datatim": 2, "count": [2, 6], "pair": 2, "dict": [2, 4, 8, 12], "structur": [2, 6], "On": 3, "noth": [3, 8, 16, 17], "guarante": [3, 8], "mix": 3, "allow": [3, 8, 12, 14, 15, 16], "logic": 3, "separ": [3, 4, 17], "part": [3, 12, 13, 16], "local": 3, "_clayer": 3, "dds_domain_default": 3, "central": [3, 8], "entrypoint": 3, "serv": 3, "root": [3, 12], "get_types_for_typeid": [4, 13], "gather": 4, "match": [4, 7, 8, 9, 15], "might": [4, 13], "involv": 4, "roundtrip": 4, "request": [4, 9, 17], "necessari": 4, "inform": [4, 6, 12, 13, 15, 16], "creation": [4, 14], "idlunion": [4, 5, 12, 13], "idlstruct": [4, 5, 12, 13, 14], "subclass": 4, "well": 4, "nest": [4, 5, 12], "main": 4, "idlenum": [4, 5, 13], "idlbitmask": [4, 5, 13], "enable_type_discoveri": 4, "upon": 4, "compil": [4, 14], "async_get_types_for_typeid": [4, 13], "version": [4, 8, 14, 15], "run": [4, 12, 13, 14, 15, 16, 17], "tupl": [4, 8], "serial": 5, "buffer": 5, "endian": 5, "use_version_2": 5, "byte": [5, 8, 12, 17], "serialize_kei": 5, "deseri": [5, 12], "has_head": 5, "_ti": 5, "deserialize_kei": 5, "discrimin": [5, 12], "_tiu": 5, "from_mask": 5, "_tib": 5, "as_mask": 5, "arg": 5, "enum": [5, 12], "follow": [5, 12, 15, 16, 17], "realli": 5, "arrai": [5, 12, 17], "subtyp": 5, "length": [5, 12], "sequenc": [5, 8, 12, 17], "max_length": 5, "typedef": 5, "bounded_str": [5, 12], "case": [5, 12, 17], "discriminator_valu": 5, "item": [5, 12], "map": [5, 12], "float": [5, 11], "full": [5, 8, 12, 16], "layer": 5, "encod": [5, 12], "char": 5, "datatyp": [5, 13, 14, 15, 17], "In": [5, 11, 12, 13, 16, 17], "implement": [5, 12], "charact": 5, "alia": [5, 6, 8], "uint8": [5, 12], "unsign": 5, "uint16": [5, 12], "16": 5, "uint32": [5, 12], "32": 5, "uint64": [5, 12], "64": [5, 12], "int8": [5, 12], "sign": 5, "int16": [5, 12], "int32": [5, 12], "int64": [5, 12], "float32": [5, 12], "32bit": 5, "point": [5, 12, 13], "typic": [5, 11], "regular": 5, "float64": [5, 12], "64bit": 5, "nonetyp": 5, "void": 5, "includ": [5, 15], "omg": [5, 12, 14, 15], "spec": [5, 15], "librari": [5, 6, 12, 14], "veri": 5, "apply_to": 5, "posit": 5, "member_id": 5, "member_hash_id": 5, "xcdrv2": 5, "cl": [5, 12], "cdrv0": 5, "must_understand": 5, "autoid": 5, "autoid_typ": 5, "extens": 5, "extensibility_typ": 5, "final": [5, 14], "append": 5, "mutabl": 5, "keylist": [5, 12], "list_of_kei": 5, "ti": 5, "bit_bound": 5, "tibe": 5, "As": 6, "suggest": 6, "modul": [6, 11, 12, 14], "meant": 6, "packag": [6, 12, 14, 15], "common": 6, "relat": 6, "c_call": [6, 13], "sampleinfo": [6, 13], "about": [6, 14], "sample_st": 6, "view_stat": 6, "instance_st": 6, "valid_data": 6, "source_timestamp": [6, 7], "publication_handl": 6, "disposed_generation_count": 6, "no_writers_generation_count": 6, "sample_rank": 6, "generation_rank": 6, "absolute_generation_rank": 6, "possibl": [6, 12, 15], "unix": [6, 7, 11], "written": [6, 7, 16, 17], "load_cyclonedd": [6, 13], "load": [6, 8, 14], "platform": [6, 14], "cdll": 6, "decor": [6, 12], "dll": 6, "c_callabl": [6, 10, 13], "return_typ": 6, "argument_typ": 6, "annot": [6, 9, 13], "cfunctyp": 6, "dds_c_t": [6, 13], "c_int": 6, "c_long": 6, "domainid": 6, "c_uint": 6, "reliabl": [6, 7, 8, 16, 17], "durabl": [6, 8, 16, 17], "histori": [6, 8, 16, 17], "presentation_access_scop": 6, "type_consist": 6, "ingnoreloc": 6, "ownership": [6, 8, 16, 17], "destination_ord": 6, "data_representation_id": 6, "c_short": 6, "qos_p": 6, "c_void_p": 6, "listener_p": 6, "topic_descriptor_p": 6, "returnv": 6, "total_count": 6, "member": [6, 12], "total_count_chang": 6, "alive_count": 6, "alive_count_chang": 6, "last_publication_handl": 6, "not_alive_count": 6, "not_alive_count_chang": 6, "last_instance_handl": 6, "last_policy_id": 6, "last_reason": 6, "current_count": 6, "current_count_chang": 6, "last_subscription_handl": 6, "as_python_guid": 6, "v": [6, 11, 16], "sample_info": [6, 9], "sample_buff": 6, "buf": 6, "len": [6, 8], "kv": 6, "stat_factori": 6, "n_kv": 6, "suspend": 7, "resum": 7, "wait_for_ack": 7, "until": [7, 16, 17], "either": [7, 12], "acknowledg": 7, "els": 7, "specifi": [7, 8, 12, 16, 17], "elaps": 7, "whichev": 7, "first": [7, 13], "publisher_or_particip": 7, "gener": [7, 8, 9, 10, 12, 14], "_t": [7, 9], "timestamp": [7, 8, 11], "write_dispos": 7, "similar": [7, 15], "also": [7, 12, 16, 17], "mark": 7, "dispose_instance_handl": 7, "wiht": 7, "register_inst": 7, "lookup_inst": [7, 9], "unregister_inst": 7, "unregist": 7, "registr": 7, "unregister_instance_handl": 7, "subsequ": 7, "get_matched_subscript": 7, "matched_sub": 7, "get_matched_subscription_data": 7, "get_liveliness_lost_statu": 7, "liveliness_lost": 7, "liveness_lost_statu": 7, "get_offered_deadline_missed_statu": 7, "offer": [7, 17], "deadlin": [7, 8, 16, 17], "miss": [7, 9], "get_offered_incompatible_qos_statu": 7, "incompat": [7, 9], "get_publication_matched_statu": 7, "easi": [8, 13, 14], "inspect": [8, 12], "actual": [8, 14], "To": [8, 12, 14, 16, 17], "reflect": 8, "x": [8, 12], "y": [8, 12], "two": [8, 16], "comparison": 8, "p": [8, 12, 13], "level": [8, 13], "keeplast": [8, 16, 17], "obtain": 8, "keepal": [8, 17], "iter": [8, 9], "support": [8, 12, 13, 14, 17], "over": [8, 14], "content": [8, 12], "sort": 8, "basepolici": 8, "inherit": [8, 12], "anoth": [8, 16], "those": 8, "typeerror": 8, "treat": 8, "valueerror": 8, "overlap": 8, "asdict": 8, "dictionari": [8, 16], "fulli": [8, 13], "describ": 8, "stai": 8, "consist": 8, "between": [8, 17], "debug": [8, 12], "within": [8, 12, 17], "fromdict": 8, "thu": 8, "store": [8, 12], "disk": 8, "them": [8, 9, 12, 14], "recommend": [8, 14], "qoshowto": 8, "how": [8, 12, 16, 17], "besteffort": [8, 16, 17], "max_blocking_tim": [8, 16, 17], "second": [8, 11, 14, 16, 17], "volatil": [8, 16, 17], "transientloc": [8, 17], "transient": [8, 16, 17], "persist": [8, 17], "depth": [8, 13, 16, 17], "publicli": 8, "policytyp": 8, "resourcelimit": [8, 16, 17], "max_sampl": [8, 16, 17], "max_inst": [8, 16, 17], "max_samples_per_inst": [8, 16, 17], "max": 8, "per": [8, 14], "presentationaccessscop": [8, 16, 17], "present": 8, "coherent_access": [8, 16, 17], "ordered_access": [8, 16, 17], "group": [8, 16, 17], "lifespan": [8, 16, 17], "expir": [8, 9], "rel": 8, "budget": [8, 16, 17], "latenc": 8, "share": [8, 14, 16, 17], "exclus": [8, 17], "strength": [8, 16, 17], "automat": [8, 12, 16, 17], "lease_dur": [8, 16, 17], "manualbyparticip": [8, 17], "manualbytop": [8, 17], "timebasedfilt": [8, 16, 17], "filter_tim": [8, 16, 17], "filter_fn": 8, "minimum": 8, "helper": [8, 11, 12], "partit": [8, 17], "partition_a": 8, "partition_b": 8, "partition_c": 8, "f": [8, 14, 16, 17], "partition_": 8, "rang": 8, "100": [8, 17], "transportprior": [8, 16, 17], "prioriti": [8, 16, 17], "destinationord": [8, 16, 17], "byreceptiontimestamp": [8, 16, 17], "bysourcetimestamp": [8, 17], "writerdatalifecycl": [8, 16, 17], "autodispos": [8, 16, 17], "readerdatalifecycl": [8, 16, 17], "autopurge_nowriter_samples_delai": [8, 16, 17], "autopurge_disposed_samples_delai": [8, 16, 17], "minut": [8, 11, 14, 17], "durabilityservic": [8, 16, 17], "cleanup_delai": [8, 16, 17], "20": [8, 12, 16, 17], "2000": 8, "200": 8, "25": 8, "ignoreloc": [8, 16, 17], "userdata": [8, 16, 17], "b": [8, 16, 17], "hello": [8, 17], "world": [8, 14], "topicdata": [8, 17], "groupdata": [8, 17], "host": 8, "binaryproperti": 8, "typeconsist": 8, "disallowtypecoercion": 8, "allowtypecoercion": 8, "datarepresent": 8, "use_cdrv0_represent": 8, "use_xcdrv2_represent": 8, "entitynam": 8, "notify_read": 9, "attribut": 9, "queue": 9, "multipl": [9, 14, 17], "read_next": 9, "shortcut": 9, "exactli": [9, 12], "take_next": 9, "read_it": 9, "stop": [9, 16, 17], "everi": 9, "read_on": 9, "take_it": [9, 14], "take_on": 9, "read_ait": 9, "asyncgener": 9, "take_ait": 9, "wait_for_historical_data": 9, "get_matched_publ": 9, "matched_pub": 9, "get_matched_publication_data": 9, "get_liveliness_changed_statu": 9, "liveliness_chang": 9, "liveness_changed_statu": 9, "get_requested_deadline_missed_statu": 9, "dealin": 9, "get_requested_incompatible_qos_statu": 9, "get_sample_lost_statu": 9, "lost": 9, "get_sample_rejected_statu": 9, "get_subscription_matched_statu": 9, "_": [10, 15], "anystr": 10, "get_nam": 10, "max_siz": 10, "256": 10, "get_type_nam": 10, "typenam": 10, "set_topic_filt": 10, "argument": [10, 12, 16, 17], "set_c_topic_filt": 10, "get_inconsistent_topic_statu": 10, "inconsistent_top": 10, "good": 11, "place": 11, "elsewher": 11, "otherwis": [11, 16], "live": 11, "isgoodent": [11, 13], "see": [11, 14, 16, 17], "week": 11, "dai": [11, 17], "hour": 11, "millisecond": 11, "microsecond": 11, "infinit": 11, "alwai": [11, 12], "express": [11, 14], "dds_duration_t": 11, "let": [11, 14], "now": [11, 13, 14, 17], "dds_time_t": 11, "subpackag": 12, "even": 12, "context": 12, "ecosystem": 12, "There": [12, 16, 17], "offici": 12, "solut": 12, "here": [12, 13, 16], "therefor": 12, "standard": [12, 14], "compat": [12, 15, 17], "howev": [12, 14, 16, 17], "pure": 12, "hint": [12, 13], "introduc": 12, "tool": [12, 14], "our": [12, 14], "represent": 12, "dataclass": [12, 14], "outsid": 12, "machineri": 12, "control": 12, "equal": 12, "runtyp": 12, "file": 12, "defin": [12, 14, 16, 17], "requir": [12, 14, 17], "interoper": 12, "project": 12, "idlpi": 12, "instal": 12, "backend": 12, "idlc": 12, "l": [12, 13, 17], "py": 12, "flag": 12, "your_fil": 12, "result": [12, 16, 17], "path": [12, 14], "intend": [12, 15], "wubbl": 12, "submodul": 12, "fruzzi": 12, "under": [12, 13, 14], "prefix": 12, "struct": 12, "xcdr": 12, "v1": 12, "most": 12, "edit": 12, "cross": 12, "languag": 12, "interact": [12, 13], "basic": 12, "further": [12, 16, 17], "import": [12, 14, 16], "point2d": 12, "p1": 12, "p2": 12, "de": 12, "messag": [12, 14, 16, 17], "preserv": 12, "factori": 12, "__post_init__": 12, "complic": 12, "scenario": 12, "put": [12, 14], "exhaust": 12, "smallpoint2d": 12, "These": [12, 13, 14], "special": 12, "runtim": [12, 14], "dure": 12, "int128": 12, "uint128": 12, "doubl": 12, "style": 12, "float128": 12, "utf": 12, "textual": 12, "versatil": 12, "abl": [12, 17], "must": 12, "known": [12, 14, 15], "beforehand": 12, "achiev": 12, "foo": 12, "bar": 12, "baz": 12, "unbound": 12, "bound": 12, "threenumb": 12, "maxfournumb": 12, "problem": 12, "both": 12, "colourmap": 12, "red": 12, "ff0000": 12, "blue": 12, "0000ff": 12, "determin": 12, "differenti": 12, "auto": 12, "maxlen": 12, "direct": 12, "north": 12, "east": 12, "south": 12, "west": 12, "walkinstruct": 12, "steps_n": 12, "steps_": 12, "steps_w": 12, "jump": 12, "treasuremap": 12, "step": [12, 13, 14], "my": 12, "coin": 12, "diamond": 12, "rich": 12, "nsign": 12, "ncaptain": 12, "corsaro": 12, "serializ": 12, "cloud": 12, "purpos": 12, "look": [12, 13, 15, 16, 17], "raw": 12, "gain": 12, "__annotations__": 12, "__idl_annotations__": 12, "__idl_field_annotations__": 12, "q": [12, 17], "assert": 12, "reason": [12, 14], "why": 12, "syntax": 12, "slightli": 12, "pragma": 12, "type1": 12, "type2": 12, "modern": 13, "bind": 13, "while": [13, 15], "abstract": 13, "quirk": 13, "hassl": 13, "experiment": 13, "orient": 13, "design": 13, "care": 13, "manag": [13, 14], "hood": [13, 14], "eventu": 13, "love": 13, "hand": 13, "dirti": 13, "skill": 13, "tutori": 13, "introduct": 13, "repositori": 13, "troubl": 13, "answer": 13, "go": [13, 14], "frequent": 13, "ask": 13, "question": 13, "io": 13, "index": 13, "search": 13, "report": 13, "bug": 13, "github": [13, 14], "via": [13, 14], "issu": 13, "tracker": 13, "better": [13, 16], "command": [13, 14], "line": 13, "typeof": 13, "pypi": [13, 14], "nightli": 13, "stream": 13, "wrap": 14, "higher": 14, "provision": 14, "wheel": 14, "pre": 14, "binari": 14, "coupl": 14, "caveat": 14, "secur": 14, "iceoryx": 14, "come": 14, "optim": 14, "cannot": 14, "environ": 14, "variabl": 14, "cyclonedds_hom": 14, "locat": 14, "At": 14, "leverag": 14, "mechan": 14, "appropri": 14, "simpli": [14, 17], "pip": 14, "git": 14, "http": [14, 15], "com": 14, "testsuit": 14, "compon": 14, "clone": 14, "cd": 14, "dev": 14, "pytest": 14, "doc": 14, "sphinx": 14, "m": 14, "server": 14, "directori": [14, 16], "permiss": 14, "virtual": 14, "poetri": 14, "pipenv": 14, "pyenv": 14, "user": [14, 17], "entri": 14, "presenc": 14, "worri": 14, "anyth": 14, "talk": 14, "necessarili": 14, "text": 14, "input": 14, "With": 14, "simpl": 14, "piec": 14, "power": 14, "complex": 14, "datastructur": 14, "think": 14, "send": 14, "few": 14, "join": 14, "And": [14, 16, 17], "announc": 14, "hurrai": 14, "hard": 14, "tell": 14, "did": 14, "up": [14, 16, 17], "script": [14, 16], "termin": [14, 16, 17], "five": 14, "exit": [14, 16, 17], "secondari": 14, "pop": 14, "quick": 15, "insight": 15, "dataspac": 15, "like": [15, 16, 17], "verifi": 15, "had": [15, 16], "subcommand": 15, "help": [15, 16, 17], "show": [15, 16, 17], "displai": [15, 16], "arriv": 15, "repl": 15, "front": 15, "ddsperf": 15, "four": 15, "mode": 15, "ping": 15, "pong": 15, "screen": 15, "output": [15, 17], "vehicl": [15, 16], "background": 15, "each": 15, "maintain": 15, "www": 15, "org": 15, "discov": 15, "manner": 15, "render": 15, "sometim": [16, 17], "know": 16, "h": [16, 17], "filenam": [16, 17], "j": 16, "w": 16, "r": [16, 17], "dcpssubscript": 16, "dcpspublic": 16, "qose": 16, "choos": [16, 17], "explain": [16, 17], "section": [16, 17], "monitor": 16, "long": [16, 17], "re": 16, "builtintopicsubscript": 16, "9ce21001": 16, "ad00": 16, "8ac9": 16, "4428": 16, "52f1000001c1": 16, "350c1001": 16, "c5e3": 16, "ca6b": 16, "712a": 16, "ee09000001c1": 16, "52f100000102": 16, "11822753457071331301": 16, "10000": 16, "9223372036854775807": 16, "ee0900000107": 16, "5513147631977453825": 16, "abov": 16, "longer": 16, "qualiti": 16, "servic": 16, "unless": 16, "small": 16, "dp": 16, "ve": 16, "02371001": 16, "8251": 16, "a889": 16, "325a": 16, "cad5000001c1": 16, "Then": 16, "713b1001": 16, "bb82": 16, "49db": 16, "9f2a": 16, "46f4000001c1": 16, "68a5": 16, "e15c": 16, "2709": 16, "d195000001c1": 16, "But": 16, "messagetop": 16, "1d681001": 16, "c040": 16, "7b68": 16, "2e4d": 16, "5fb900000102": 16, "e4921001": 16, "4edb": 16, "926f": 16, "14be": 16, "adb500000102": 16, "adb5000001c1": 16, "2236347693610277994": 16, "testtop": 16, "100000000": 16, "5dc81001": 16, "75dc": 16, "1fe3": 16, "5468": 16, "48b3000001c1": 16, "764e1001": 16, "d9da": 16, "53dd": 16, "ca0b": 16, "ab06000001c1": 16, "divid": 16, "test": [16, 17], "ddsls_data": 16, "da531001": 16, "77b3": 16, "aef6": 16, "0cb8": 16, "647f000001c1": 16, "8e281001": 16, "e010": 16, "0c8d": 16, "305c": 16, "20a3000001c1": 16, "besid": 16, "indefinit": [16, 17], "interrupt": [16, 17], "custom": [16, 17], "shut": 16, "down": 16, "arbitrari": 17, "eqo": 17, "qoshelp": 17, "json": 17, "entityqo": 17, "entit": 17, "e": 17, "g": 17, "123": 17, "1000": 17, "particular": 17, "startup": 17, "helloword": 17, "helloworld": 17, "420": 17, "o": 17, "seq": 17, "keyval": 17, "intarrai": 17, "strarrai": 17, "intsequ": 17, "strsequenc": 17, "best": 17, "effort": 17, "keep": 17, "space": 17, "comma": 17, "freedom": 17, "insensit": 17, "colon": 17, "ye": 17, "off": 17, "certain": 17, "desir": 17, "togeth": 17, "warn": 17, "inapplicableqoswarn": 17, "rxo": 17, "detect": 17, "successfulli": 17, "incompatibleqoswarn": 17, "pubsub_data": 17, "33": 17, "int_arrai": 17}, "objects": {"cyclonedds.builtin": [[1, 0, 1, "", "BuiltinDataReader"], [1, 0, 1, "", "BuiltinTopic"], [1, 2, 1, "", "BuiltinTopicDcpsParticipant"], [1, 2, 1, "", "BuiltinTopicDcpsPublication"], [1, 2, 1, "", "BuiltinTopicDcpsSubscription"], [1, 2, 1, "", "BuiltinTopicDcpsTopic"], [1, 0, 1, "", "DcpsEndpoint"], [1, 0, 1, "", "DcpsParticipant"]], "cyclonedds.builtin.BuiltinDataReader": [[1, 1, 1, "", "__init__"], [1, 1, 1, "", "read"], [1, 1, 1, "", "take"]], "cyclonedds.builtin.DcpsEndpoint": [[1, 3, 1, "", "key"], [1, 3, 1, "", "participant_instance_handle"], [1, 3, 1, "", "participant_key"], [1, 3, 1, "", "qos"], [1, 3, 1, "", "topic_name"], [1, 3, 1, "", "type_name"], [1, 3, 1, "", "typeid"]], "cyclonedds.builtin.DcpsParticipant": [[1, 3, 1, "", "key"], [1, 3, 1, "", "qos"]], "cyclonedds.core": [[2, 0, 1, "", "DDSException"], [2, 0, 1, "", "DDSStatus"], [2, 0, 1, "", "Entity"], [2, 0, 1, "", "GuardCondition"], [2, 0, 1, "", "InstanceState"], [2, 0, 1, "", "Listener"], [8, 0, 1, "", "Policy"], [8, 0, 1, "", "Qos"], [2, 0, 1, "", "QueryCondition"], [2, 0, 1, "", "ReadCondition"], [2, 0, 1, "", "SampleState"], [2, 0, 1, "", "Statistics"], [2, 0, 1, "", "ViewState"], [2, 0, 1, "", "WaitSet"]], "cyclonedds.core.DDSException": [[2, 3, 1, "", "DDS_RETCODE_ALREADY_DELETED"], [2, 3, 1, "", "DDS_RETCODE_BAD_PARAMETER"], [2, 3, 1, "", "DDS_RETCODE_ERROR"], [2, 3, 1, "", "DDS_RETCODE_ILLEGAL_OPERATION"], [2, 3, 1, "", "DDS_RETCODE_IMMUTABLE_POLICY"], [2, 3, 1, "", "DDS_RETCODE_INCONSISTENT_POLICY"], [2, 3, 1, "", "DDS_RETCODE_NOT_ALLOWED_BY_SECURITY"], [2, 3, 1, "", "DDS_RETCODE_NOT_ENABLED"], [2, 3, 1, "", "DDS_RETCODE_NO_DATA"], [2, 3, 1, "", "DDS_RETCODE_OK"], [2, 3, 1, "", "DDS_RETCODE_OUT_OF_RESOURCES"], [2, 3, 1, "", "DDS_RETCODE_PRECONDITION_NOT_MET"], [2, 3, 1, "", "DDS_RETCODE_TIMEOUT"], [2, 3, 1, "", "DDS_RETCODE_UNSUPPORTED"], [2, 3, 1, "", "code"], [2, 3, 1, "", "error_message_mapping"], [2, 3, 1, "", "msg"]], "cyclonedds.core.DDSStatus": [[2, 3, 1, "", "DataAvailable"], [2, 3, 1, "", "DataOnReaders"], [2, 3, 1, "", "InconsistentTopic"], [2, 3, 1, "", "LivelinessChanged"], [2, 3, 1, "", "LivelinessLost"], [2, 3, 1, "", "OfferedDeadlineMissed"], [2, 3, 1, "", "OfferedIncompatibleQos"], [2, 3, 1, "", "PublicationMatched"], [2, 3, 1, "", "RequestedDeadlineMissed"], [2, 3, 1, "", "RequestedIncompatibleQos"], [2, 3, 1, "", "SampleLost"], [2, 3, 1, "", "SampleRejected"], [2, 3, 1, "", "SubscriptionMatched"]], "cyclonedds.core.Entity": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "begin_coherent"], [2, 3, 1, "", "children"], [2, 3, 1, "", "datareader"], [2, 3, 1, "", "domain_id"], [2, 1, 1, "", "end_coherent"], [2, 1, 1, "", "get_children"], [2, 1, 1, "", "get_datareader"], [2, 1, 1, "", "get_domain_id"], [2, 1, 1, "", "get_entity"], [2, 1, 1, "", "get_guid"], [2, 1, 1, "", "get_instance_handle"], [2, 1, 1, "", "get_listener"], [2, 1, 1, "", "get_parent"], [2, 1, 1, "", "get_participant"], [2, 1, 1, "", "get_publisher"], [2, 1, 1, "", "get_qos"], [2, 1, 1, "", "get_status_changes"], [2, 1, 1, "", "get_status_mask"], [2, 1, 1, "", "get_subscriber"], [2, 3, 1, "", "guid"], [2, 4, 1, "", "instance_handle"], [2, 3, 1, "", "parent"], [2, 3, 1, "", "participant"], [2, 3, 1, "", "publisher"], [2, 1, 1, "", "read_status"], [2, 1, 1, "", "set_listener"], [2, 1, 1, "", "set_qos"], [2, 1, 1, "", "set_status_mask"], [2, 3, 1, "", "status_mask"], [2, 3, 1, "", "subscriber"], [2, 1, 1, "", "take_status"]], "cyclonedds.core.GuardCondition": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "read"], [2, 1, 1, "", "set"], [2, 1, 1, "", "take"]], "cyclonedds.core.InstanceState": [[2, 3, 1, "", "Alive"], [2, 3, 1, "", "Any"], [2, 3, 1, "", "NotAliveDisposed"], [2, 3, 1, "", "NotAliveNoWriters"]], "cyclonedds.core.Listener": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "copy"], [2, 1, 1, "", "copy_to"], [2, 1, 1, "", "merge"], [2, 1, 1, "", "on_data_available"], [2, 1, 1, "", "on_data_on_readers"], [2, 1, 1, "", "on_inconsistent_topic"], [2, 1, 1, "", "on_liveliness_changed"], [2, 1, 1, "", "on_liveliness_lost"], [2, 1, 1, "", "on_offered_deadline_missed"], [2, 1, 1, "", "on_offered_incompatible_qos"], [2, 1, 1, "", "on_publication_matched"], [2, 1, 1, "", "on_requested_deadline_missed"], [2, 1, 1, "", "on_requested_incompatible_qos"], [2, 1, 1, "", "on_sample_lost"], [2, 1, 1, "", "on_sample_rejected"], [2, 1, 1, "", "on_subscription_matched"], [2, 1, 1, "", "reset"], [2, 1, 1, "", "set_on_data_available"], [2, 1, 1, "", "set_on_data_on_readers"], [2, 1, 1, "", "set_on_inconsistent_topic"], [2, 1, 1, "", "set_on_liveliness_changed"], [2, 1, 1, "", "set_on_liveliness_lost"], [2, 1, 1, "", "set_on_offered_deadline_missed"], [2, 1, 1, "", "set_on_offered_incompatible_qos"], [2, 1, 1, "", "set_on_publication_matched"], [2, 1, 1, "", "set_on_requested_deadline_missed"], [2, 1, 1, "", "set_on_requested_incompatible_qos"], [2, 1, 1, "", "set_on_sample_lost"], [2, 1, 1, "", "set_on_sample_rejected"], [2, 1, 1, "", "set_on_subscription_matched"]], "cyclonedds.core.Policy": [[8, 0, 1, "", "BinaryProperty"], [8, 0, 1, "", "DataRepresentation"], [8, 0, 1, "", "Deadline"], [8, 0, 1, "", "DestinationOrder"], [8, 0, 1, "", "Durability"], [8, 0, 1, "", "DurabilityService"], [8, 0, 1, "", "EntityName"], [8, 0, 1, "", "Groupdata"], [8, 0, 1, "", "History"], [8, 0, 1, "", "IgnoreLocal"], [8, 0, 1, "", "LatencyBudget"], [8, 0, 1, "", "Lifespan"], [8, 0, 1, "", "Liveliness"], [8, 0, 1, "", "Ownership"], [8, 0, 1, "", "OwnershipStrength"], [8, 0, 1, "", "Partition"], [8, 0, 1, "", "PresentationAccessScope"], [8, 0, 1, "", "Property"], [8, 0, 1, "", "ReaderDataLifecycle"], [8, 0, 1, "", "Reliability"], [8, 0, 1, "", "ResourceLimits"], [8, 0, 1, "", "TimeBasedFilter"], [8, 0, 1, "", "Topicdata"], [8, 0, 1, "", "TransportPriority"], [8, 0, 1, "", "TypeConsistency"], [8, 0, 1, "", "Userdata"], [8, 0, 1, "", "WriterDataLifecycle"]], "cyclonedds.core.Policy.Deadline": [[8, 3, 1, "", "deadline"]], "cyclonedds.core.Policy.DurabilityService": [[8, 3, 1, "", "cleanup_delay"], [8, 3, 1, "", "history"], [8, 3, 1, "", "max_instances"], [8, 3, 1, "", "max_samples"], [8, 3, 1, "", "max_samples_per_instance"]], "cyclonedds.core.Policy.History": [[8, 3, 1, "", "KeepAll"], [8, 3, 1, "", "KeepLast"]], "cyclonedds.core.Policy.Lifespan": [[8, 3, 1, "", "lifespan"]], "cyclonedds.core.Policy.Liveliness": [[8, 3, 1, "", "Automatic"], [8, 3, 1, "", "ManualByParticipant"], [8, 3, 1, "", "ManualByTopic"]], "cyclonedds.core.Policy.Ownership": [[8, 3, 1, "", "Exclusive"], [8, 3, 1, "", "Shared"]], "cyclonedds.core.Policy.Partition": [[8, 3, 1, "", "partitions"]], "cyclonedds.core.Policy.PresentationAccessScope": [[8, 3, 1, "", "Group"], [8, 3, 1, "", "Instance"], [8, 3, 1, "", "Topic"]], "cyclonedds.core.Policy.ReaderDataLifecycle": [[8, 3, 1, "", "autopurge_disposed_samples_delay"], [8, 3, 1, "", "autopurge_nowriter_samples_delay"]], "cyclonedds.core.Policy.Reliability": [[8, 3, 1, "", "Reliable"]], "cyclonedds.core.Policy.ResourceLimits": [[8, 3, 1, "", "max_instances"], [8, 3, 1, "", "max_samples"], [8, 3, 1, "", "max_samples_per_instance"]], "cyclonedds.core.Policy.TimeBasedFilter": [[8, 3, 1, "", "filter_time"]], "cyclonedds.core.Policy.TransportPriority": [[8, 3, 1, "", "priority"]], "cyclonedds.core.Policy.TypeConsistency": [[8, 3, 1, "", "AllowTypeCoercion"], [8, 3, 1, "", "DisallowTypeCoercion"]], "cyclonedds.core.Policy.WriterDataLifecycle": [[8, 3, 1, "", "autodispose"]], "cyclonedds.core.Qos": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "asdict"], [8, 1, 1, "", "fromdict"], [8, 3, 1, "", "policies"]], "cyclonedds.core.QueryCondition": [[2, 1, 1, "", "__init__"]], "cyclonedds.core.ReadCondition": [[2, 1, 1, "", "__init__"]], "cyclonedds.core.SampleState": [[2, 3, 1, "", "Any"], [2, 3, 1, "", "NotRead"], [2, 3, 1, "", "Read"]], "cyclonedds.core.Statistics": [[2, 3, 1, "", "count"], [2, 3, 1, "", "data"], [2, 3, 1, "", "entity"], [2, 3, 1, "", "opaque"], [2, 1, 1, "", "refresh"], [2, 3, 1, "", "time"]], "cyclonedds.core.ViewState": [[2, 3, 1, "", "Any"], [2, 3, 1, "", "New"], [2, 3, 1, "", "Old"]], "cyclonedds.core.WaitSet": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "attach"], [2, 1, 1, "", "detach"], [2, 1, 1, "", "get_entities"], [2, 1, 1, "", "is_attached"], [2, 1, 1, "", "set_trigger"], [2, 1, 1, "", "wait"], [2, 1, 1, "", "wait_async"], [2, 1, 1, "", "wait_until"]], "cyclonedds.domain": [[3, 0, 1, "", "Domain"], [3, 0, 1, "", "DomainParticipant"]], "cyclonedds.domain.Domain": [[3, 1, 1, "", "get_participants"]], "cyclonedds.dynamic": [[4, 5, 1, "", "async_get_types_for_typeid"], [4, 5, 1, "", "get_types_for_typeid"]], "cyclonedds.idl": [[5, 0, 1, "", "IdlBitmask"], [5, 0, 1, "", "IdlEnum"], [5, 0, 1, "", "IdlStruct"], [5, 0, 1, "", "IdlUnion"]], "cyclonedds.idl.IdlBitmask": [[5, 1, 1, "", "as_mask"], [5, 1, 1, "", "from_mask"]], "cyclonedds.idl.IdlStruct": [[5, 1, 1, "", "deserialize"], [5, 1, 1, "", "deserialize_key"], [5, 1, 1, "", "serialize"], [5, 1, 1, "", "serialize_key"]], "cyclonedds.idl.IdlUnion": [[5, 1, 1, "", "deserialize"], [5, 1, 1, "", "deserialize_key"], [5, 4, 1, "", "discriminator"], [5, 1, 1, "", "get"], [5, 1, 1, "", "serialize"], [5, 1, 1, "", "set"], [5, 4, 1, "", "value"]], "cyclonedds.idl.annotations": [[5, 5, 1, "", "appendable"], [5, 5, 1, "", "autoid"], [5, 5, 1, "", "bit_bound"], [5, 5, 1, "", "cdrv0"], [5, 5, 1, "", "extensibility"], [5, 5, 1, "", "final"], [5, 5, 1, "", "key"], [5, 5, 1, "", "keylist"], [5, 5, 1, "", "member_hash_id"], [5, 5, 1, "", "member_id"], [5, 5, 1, "", "must_understand"], [5, 5, 1, "", "mutable"], [5, 5, 1, "", "nested"], [5, 5, 1, "", "position"], [5, 5, 1, "", "xcdrv2"]], "cyclonedds.idl.types": [[5, 2, 1, "", "NoneType"], [5, 0, 1, "", "array"], [5, 0, 1, "", "bounded_str"], [5, 0, 1, "", "case"], [5, 2, 1, "", "char"], [5, 0, 1, "", "default"], [5, 2, 1, "", "float32"], [5, 2, 1, "", "float64"], [5, 2, 1, "", "int16"], [5, 2, 1, "", "int32"], [5, 2, 1, "", "int64"], [5, 2, 1, "", "int8"], [5, 0, 1, "", "sequence"], [5, 0, 1, "", "typedef"], [5, 2, 1, "", "uint16"], [5, 2, 1, "", "uint32"], [5, 2, 1, "", "uint64"], [5, 2, 1, "", "uint8"]], "cyclonedds.internal": [[6, 0, 1, "", "DDS"], [6, 0, 1, "", "SampleInfo"], [6, 5, 1, "", "c_call"], [6, 5, 1, "", "c_callable"], [6, 0, 1, "", "dds_c_t"], [6, 5, 1, "", "load_cyclonedds"]], "cyclonedds.internal.SampleInfo": [[6, 3, 1, "", "instance_handle"], [6, 3, 1, "", "instance_state"], [6, 3, 1, "", "sample_state"], [6, 3, 1, "", "source_timestamp"], [6, 3, 1, "", "view_state"]], "cyclonedds.internal.dds_c_t": [[6, 3, 1, "", "attach"], [6, 3, 1, "", "data_representation_id"], [6, 3, 1, "", "destination_order"], [6, 3, 1, "", "domainid"], [6, 3, 1, "", "durability"], [6, 3, 1, "", "duration"], [6, 3, 1, "", "entity"], [6, 0, 1, "", "guid"], [6, 3, 1, "", "history"], [6, 0, 1, "", "inconsistent_topic_status"], [6, 3, 1, "", "ingnorelocal"], [6, 3, 1, "", "instance_handle"], [6, 3, 1, "", "instance_state"], [6, 3, 1, "", "listener_p"], [6, 3, 1, "", "liveliness"], [6, 0, 1, "", "liveliness_changed_status"], [6, 0, 1, "", "liveliness_lost_status"], [6, 0, 1, "", "offered_deadline_missed_status"], [6, 0, 1, "", "offered_incompatible_qos_status"], [6, 3, 1, "", "ownership"], [6, 3, 1, "", "presentation_access_scope"], [6, 0, 1, "", "publication_matched_status"], [6, 3, 1, "", "qos_p"], [6, 3, 1, "", "reliability"], [6, 0, 1, "", "requested_deadline_missed_status"], [6, 0, 1, "", "requested_incompatible_qos_status"], [6, 3, 1, "", "returnv"], [6, 0, 1, "", "sample_buffer"], [6, 0, 1, "", "sample_info"], [6, 0, 1, "", "sample_lost_status"], [6, 0, 1, "", "sample_rejected_status"], [6, 3, 1, "", "sample_state"], [6, 1, 1, "", "stat_factory"], [6, 0, 1, "", "statistics"], [6, 0, 1, "", "subscription_matched_status"], [6, 3, 1, "", "time"], [6, 3, 1, "", "topic_descriptor_p"], [6, 3, 1, "", "type_consistency"], [6, 3, 1, "", "view_state"]], "cyclonedds.internal.dds_c_t.guid": [[6, 1, 1, "", "as_python_guid"], [6, 3, 1, "", "v"]], "cyclonedds.internal.dds_c_t.inconsistent_topic_status": [[6, 3, 1, "", "total_count"], [6, 3, 1, "", "total_count_change"]], "cyclonedds.internal.dds_c_t.liveliness_changed_status": [[6, 3, 1, "", "alive_count"], [6, 3, 1, "", "alive_count_change"], [6, 3, 1, "", "last_publication_handle"], [6, 3, 1, "", "not_alive_count"], [6, 3, 1, "", "not_alive_count_change"]], "cyclonedds.internal.dds_c_t.liveliness_lost_status": [[6, 3, 1, "", "total_count"], [6, 3, 1, "", "total_count_change"]], "cyclonedds.internal.dds_c_t.offered_deadline_missed_status": [[6, 3, 1, "", "last_instance_handle"], [6, 3, 1, "", "total_count"], [6, 3, 1, "", "total_count_change"]], "cyclonedds.internal.dds_c_t.offered_incompatible_qos_status": [[6, 3, 1, "", "last_policy_id"], [6, 3, 1, "", "total_count"], [6, 3, 1, "", "total_count_change"]], "cyclonedds.internal.dds_c_t.publication_matched_status": [[6, 3, 1, "", "current_count"], [6, 3, 1, "", "current_count_change"], [6, 3, 1, "", "last_subscription_handle"], [6, 3, 1, "", "total_count"], [6, 3, 1, "", "total_count_change"]], "cyclonedds.internal.dds_c_t.requested_deadline_missed_status": [[6, 3, 1, "", "last_instance_handle"], [6, 3, 1, "", "total_count"], [6, 3, 1, "", "total_count_change"]], "cyclonedds.internal.dds_c_t.requested_incompatible_qos_status": [[6, 3, 1, "", "last_policy_id"], [6, 3, 1, "", "total_count"], [6, 3, 1, "", "total_count_change"]], "cyclonedds.internal.dds_c_t.sample_buffer": [[6, 3, 1, "", "buf"], [6, 3, 1, "", "len"]], "cyclonedds.internal.dds_c_t.sample_info": [[6, 3, 1, "", "absolute_generation_rank"], [6, 3, 1, "", "disposed_generation_count"], [6, 3, 1, "", "generation_rank"], [6, 3, 1, "", "instance_handle"], [6, 3, 1, "", "instance_state"], [6, 3, 1, "", "no_writers_generation_count"], [6, 3, 1, "", "publication_handle"], [6, 3, 1, "", "sample_rank"], [6, 3, 1, "", "sample_state"], [6, 3, 1, "", "source_timestamp"], [6, 3, 1, "", "valid_data"], [6, 3, 1, "", "view_state"]], "cyclonedds.internal.dds_c_t.sample_lost_status": [[6, 3, 1, "", "total_count"], [6, 3, 1, "", "total_count_change"]], "cyclonedds.internal.dds_c_t.sample_rejected_status": [[6, 3, 1, "", "last_instance_handle"], [6, 3, 1, "", "last_reason"], [6, 3, 1, "", "total_count"], [6, 3, 1, "", "total_count_change"]], "cyclonedds.internal.dds_c_t.statistics": [[6, 3, 1, "", "count"], [6, 3, 1, "", "entity"], [6, 3, 1, "", "kv"], [6, 3, 1, "", "opaque"], [6, 3, 1, "", "time"]], "cyclonedds.internal.dds_c_t.subscription_matched_status": [[6, 3, 1, "", "current_count"], [6, 3, 1, "", "current_count_change"], [6, 3, 1, "", "last_publication_handle"], [6, 3, 1, "", "total_count"], [6, 3, 1, "", "total_count_change"]], "cyclonedds.pub": [[7, 0, 1, "", "DataWriter"], [7, 0, 1, "", "Publisher"]], "cyclonedds.pub.DataWriter": [[7, 1, 1, "", "dispose"], [7, 1, 1, "", "dispose_instance_handle"], [7, 1, 1, "", "get_liveliness_lost_status"], [7, 1, 1, "", "get_matched_subscription_data"], [7, 1, 1, "", "get_matched_subscriptions"], [7, 1, 1, "", "get_offered_deadline_missed_status"], [7, 1, 1, "", "get_offered_incompatible_qos_status"], [7, 1, 1, "", "get_publication_matched_status"], [7, 1, 1, "", "lookup_instance"], [7, 4, 1, "", "matched_sub"], [7, 1, 1, "", "register_instance"], [7, 4, 1, "", "topic"], [7, 1, 1, "", "unregister_instance"], [7, 1, 1, "", "unregister_instance_handle"], [7, 1, 1, "", "wait_for_acks"], [7, 1, 1, "", "write"], [7, 1, 1, "", "write_dispose"]], "cyclonedds.pub.Publisher": [[7, 1, 1, "", "resume"], [7, 1, 1, "", "suspend"], [7, 1, 1, "", "wait_for_acks"]], "cyclonedds.sub": [[9, 0, 1, "", "DataReader"], [9, 0, 1, "", "Subscriber"]], "cyclonedds.sub.DataReader": [[9, 1, 1, "", "get_liveliness_changed_status"], [9, 1, 1, "", "get_matched_publication_data"], [9, 1, 1, "", "get_matched_publications"], [9, 1, 1, "", "get_requested_deadline_missed_status"], [9, 1, 1, "", "get_requested_incompatible_qos_status"], [9, 1, 1, "", "get_sample_lost_status"], [9, 1, 1, "", "get_sample_rejected_status"], [9, 1, 1, "", "get_subscription_matched_status"], [9, 1, 1, "", "lookup_instance"], [9, 4, 1, "", "matched_pub"], [9, 1, 1, "", "read"], [9, 1, 1, "", "read_aiter"], [9, 1, 1, "", "read_iter"], [9, 1, 1, "", "read_next"], [9, 1, 1, "", "read_one"], [9, 1, 1, "", "take"], [9, 1, 1, "", "take_aiter"], [9, 1, 1, "", "take_iter"], [9, 1, 1, "", "take_next"], [9, 1, 1, "", "take_one"], [9, 4, 1, "", "topic"], [9, 1, 1, "", "wait_for_historical_data"]], "cyclonedds.sub.Subscriber": [[9, 1, 1, "", "notify_readers"]], "cyclonedds.topic": [[10, 0, 1, "", "Topic"]], "cyclonedds.topic.Topic": [[10, 1, 1, "", "get_inconsistent_topic_status"], [10, 1, 1, "", "get_name"], [10, 1, 1, "", "get_type_name"], [10, 4, 1, "", "name"], [10, 1, 1, "", "set_c_topic_filter"], [10, 1, 1, "", "set_topic_filter"], [10, 4, 1, "", "typename"]], "cyclonedds.util": [[11, 5, 1, "", "duration"], [11, 5, 1, "", "isgoodentity"]], "cyclonedds.util.timestamp": [[11, 5, 1, "", "now"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:data", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "data", "Python data"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"api": [0, 13], "builtin": 1, "core": [2, 8], "domain": [3, 16], "dynam": 4, "idl": [5, 12], "type": [5, 12], "annot": [5, 12], "intern": 6, "pub": 7, "sub": 9, "topic": [10, 16, 17], "util": 11, "work": 12, "compil": 12, "datatyp": 12, "python": [12, 13, 14], "integ": 12, "float": 12, "string": 12, "list": 12, "dictionari": 12, "union": 12, "object": 12, "serial": 12, "eclips": 13, "cyclon": 13, "dd": [13, 14], "document": 13, "featur": 13, "get": 13, "start": 13, "help": 13, "tool": [13, 15, 16, 17], "other": 13, "introduct": [14, 16, 17], "prerequisit": 14, "instal": 14, "your": 14, "first": 14, "applic": 14, "The": 15, "cyclonedd": 15, "command": [15, 16, 17], "line": [15, 16, 17], "l": 15, "p": 15, "typeof": 15, "subscrib": 15, "publish": 15, "perform": 15, "ddsl": 16, "usag": [16, 17], "comprehend": 16, "output": 16, "particip": 16, "id": 16, "watch": 16, "mode": 16, "verbos": 16, "json": 16, "write": [16, 17], "file": [16, 17], "runtim": [16, 17], "pubsub": 17, "read": 17, "data": 17, "qo": 17, "entiti": 17, "inapplic": 17, "incompat": 17}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API": [[0, "api"]], "builtin": [[1, "builtin"]], "core": [[2, "core"], [8, "core"]], "domain": [[3, "domain"]], "dynamic": [[4, "dynamic"]], "idl": [[5, "idl"]], "idl.types": [[5, "idl-types"]], "idl.annotations": [[5, "idl-annotations"]], "internal": [[6, "internal"]], "pub": [[7, "pub"]], "sub": [[9, "sub"]], "topic": [[10, "topic"]], "util": [[11, "util"]], "Working with IDL": [[12, "working-with-idl"]], "Working with the IDL compiler": [[12, "working-with-the-idl-compiler"]], "IDL Datatypes in Python": [[12, "idl-datatypes-in-python"]], "Types": [[12, "types"]], "Integers": [[12, "integers"]], "Floats": [[12, "floats"]], "Strings": [[12, "strings"]], "Lists": [[12, "lists"]], "Dictionaries": [[12, "dictionaries"]], "Unions": [[12, "unions"]], "Objects": [[12, "objects"]], "Serialization": [[12, "serialization"]], "Idl Annotations": [[12, "idl-annotations"]], "Eclipse Cyclone DDS: Python API documentation": [[13, "var-project-documentation"]], "Features": [[13, "features"]], "Getting started": [[13, "getting-started"]], "Getting help": [[13, "getting-help"]], "API documentation": [[13, "api-documentation"]], "Tools": [[13, "tools"]], "Other": [[13, "other"]], "Introduction": [[14, "introduction"], [16, "introduction"], [17, "introduction"]], "Prerequisites": [[14, "prerequisites"]], "Installation": [[14, "installation"]], "Your first Python DDS application": [[14, "your-first-python-dds-application"]], "The cyclonedds command line tool": [[15, "the-cyclonedds-command-line-tool"]], "cyclonedds ls": [[15, "cyclonedds-ls"]], "cyclonedds ps": [[15, "cyclonedds-ps"]], "cyclonedds typeof": [[15, "cyclonedds-typeof"]], "cyclonedds subscribe": [[15, "cyclonedds-subscribe"]], "cyclonedds publish": [[15, "cyclonedds-publish"]], "cyclonedds performance": [[15, "cyclonedds-performance"]], "Command line tool: ddsls": [[16, "command-line-tool-ddsls"]], "Usage": [[16, "usage"], [17, "usage"]], "Topic": [[16, "topic"], [17, "topic"]], "Comprehend output": [[16, "comprehend-output"]], "Domain participant id": [[16, "domain-participant-id"]], "Watch mode": [[16, "watch-mode"]], "Verbose mode": [[16, "verbose-mode"]], "JSON mode": [[16, "json-mode"]], "Write to file": [[16, "write-to-file"], [17, "write-to-file"]], "Runtime": [[16, "runtime"], [17, "runtime"]], "Command line tool: pubsub": [[17, "command-line-tool-pubsub"]], "Read/write data": [[17, "read-write-data"]], "QoS": [[17, "qos"]], "Entity QoS": [[17, "entity-qos"]], "Inapplicable QoS for entity": [[17, "inapplicable-qos-for-entity"]], "Incompatible QoS": [[17, "incompatible-qos"]]}, "indexentries": {"builtindatareader (class in cyclonedds.builtin)": [[1, "cyclonedds.builtin.BuiltinDataReader"]], "builtintopic (class in cyclonedds.builtin)": [[1, "cyclonedds.builtin.BuiltinTopic"]], "builtintopicdcpsparticipant (in module cyclonedds.builtin)": [[1, "cyclonedds.builtin.BuiltinTopicDcpsParticipant"]], "builtintopicdcpspublication (in module cyclonedds.builtin)": [[1, "cyclonedds.builtin.BuiltinTopicDcpsPublication"]], "builtintopicdcpssubscription (in module cyclonedds.builtin)": [[1, "cyclonedds.builtin.BuiltinTopicDcpsSubscription"]], "builtintopicdcpstopic (in module cyclonedds.builtin)": [[1, "cyclonedds.builtin.BuiltinTopicDcpsTopic"]], "dcpsendpoint (class in cyclonedds.builtin)": [[1, "cyclonedds.builtin.DcpsEndpoint"]], "dcpsparticipant (class in cyclonedds.builtin)": [[1, "cyclonedds.builtin.DcpsParticipant"]], "__init__() (cyclonedds.builtin.builtindatareader method)": [[1, "cyclonedds.builtin.BuiltinDataReader.__init__"]], "key (cyclonedds.builtin.dcpsendpoint attribute)": [[1, "cyclonedds.builtin.DcpsEndpoint.key"]], "key (cyclonedds.builtin.dcpsparticipant attribute)": [[1, "cyclonedds.builtin.DcpsParticipant.key"]], "participant_instance_handle (cyclonedds.builtin.dcpsendpoint attribute)": [[1, "cyclonedds.builtin.DcpsEndpoint.participant_instance_handle"]], "participant_key (cyclonedds.builtin.dcpsendpoint attribute)": [[1, "cyclonedds.builtin.DcpsEndpoint.participant_key"]], "qos (cyclonedds.builtin.dcpsendpoint attribute)": [[1, "cyclonedds.builtin.DcpsEndpoint.qos"]], "qos (cyclonedds.builtin.dcpsparticipant attribute)": [[1, "cyclonedds.builtin.DcpsParticipant.qos"]], "read() (cyclonedds.builtin.builtindatareader method)": [[1, "cyclonedds.builtin.BuiltinDataReader.read"]], "take() (cyclonedds.builtin.builtindatareader method)": [[1, "cyclonedds.builtin.BuiltinDataReader.take"]], "topic_name (cyclonedds.builtin.dcpsendpoint attribute)": [[1, "cyclonedds.builtin.DcpsEndpoint.topic_name"]], "type_name (cyclonedds.builtin.dcpsendpoint attribute)": [[1, "cyclonedds.builtin.DcpsEndpoint.type_name"]], "typeid (cyclonedds.builtin.dcpsendpoint attribute)": [[1, "cyclonedds.builtin.DcpsEndpoint.typeid"]], "alive (cyclonedds.core.instancestate attribute)": [[2, "cyclonedds.core.InstanceState.Alive"]], "any (cyclonedds.core.instancestate attribute)": [[2, "cyclonedds.core.InstanceState.Any"]], "any (cyclonedds.core.samplestate attribute)": [[2, "cyclonedds.core.SampleState.Any"]], "any (cyclonedds.core.viewstate attribute)": [[2, "cyclonedds.core.ViewState.Any"]], "ddsexception (class in cyclonedds.core)": [[2, "cyclonedds.core.DDSException"]], "ddsstatus (class in cyclonedds.core)": [[2, "cyclonedds.core.DDSStatus"]], "dds_retcode_already_deleted (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.DDS_RETCODE_ALREADY_DELETED"]], "dds_retcode_bad_parameter (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.DDS_RETCODE_BAD_PARAMETER"]], "dds_retcode_error (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.DDS_RETCODE_ERROR"]], "dds_retcode_illegal_operation (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.DDS_RETCODE_ILLEGAL_OPERATION"]], "dds_retcode_immutable_policy (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.DDS_RETCODE_IMMUTABLE_POLICY"]], "dds_retcode_inconsistent_policy (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.DDS_RETCODE_INCONSISTENT_POLICY"]], "dds_retcode_not_allowed_by_security (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.DDS_RETCODE_NOT_ALLOWED_BY_SECURITY"]], "dds_retcode_not_enabled (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.DDS_RETCODE_NOT_ENABLED"]], "dds_retcode_no_data (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.DDS_RETCODE_NO_DATA"]], "dds_retcode_ok (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.DDS_RETCODE_OK"]], "dds_retcode_out_of_resources (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.DDS_RETCODE_OUT_OF_RESOURCES"]], "dds_retcode_precondition_not_met (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.DDS_RETCODE_PRECONDITION_NOT_MET"]], "dds_retcode_timeout (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.DDS_RETCODE_TIMEOUT"]], "dds_retcode_unsupported (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.DDS_RETCODE_UNSUPPORTED"]], "dataavailable (cyclonedds.core.ddsstatus attribute)": [[2, "cyclonedds.core.DDSStatus.DataAvailable"]], "dataonreaders (cyclonedds.core.ddsstatus attribute)": [[2, "cyclonedds.core.DDSStatus.DataOnReaders"]], "entity (class in cyclonedds.core)": [[2, "cyclonedds.core.Entity"]], "guardcondition (class in cyclonedds.core)": [[2, "cyclonedds.core.GuardCondition"]], "inconsistenttopic (cyclonedds.core.ddsstatus attribute)": [[2, "cyclonedds.core.DDSStatus.InconsistentTopic"]], "instancestate (class in cyclonedds.core)": [[2, "cyclonedds.core.InstanceState"]], "listener (class in cyclonedds.core)": [[2, "cyclonedds.core.Listener"]], "livelinesschanged (cyclonedds.core.ddsstatus attribute)": [[2, "cyclonedds.core.DDSStatus.LivelinessChanged"]], "livelinesslost (cyclonedds.core.ddsstatus attribute)": [[2, "cyclonedds.core.DDSStatus.LivelinessLost"]], "new (cyclonedds.core.viewstate attribute)": [[2, "cyclonedds.core.ViewState.New"]], "notalivedisposed (cyclonedds.core.instancestate attribute)": [[2, "cyclonedds.core.InstanceState.NotAliveDisposed"]], "notalivenowriters (cyclonedds.core.instancestate attribute)": [[2, "cyclonedds.core.InstanceState.NotAliveNoWriters"]], "notread (cyclonedds.core.samplestate attribute)": [[2, "cyclonedds.core.SampleState.NotRead"]], "offereddeadlinemissed (cyclonedds.core.ddsstatus attribute)": [[2, "cyclonedds.core.DDSStatus.OfferedDeadlineMissed"]], "offeredincompatibleqos (cyclonedds.core.ddsstatus attribute)": [[2, "cyclonedds.core.DDSStatus.OfferedIncompatibleQos"]], "old (cyclonedds.core.viewstate attribute)": [[2, "cyclonedds.core.ViewState.Old"]], "publicationmatched (cyclonedds.core.ddsstatus attribute)": [[2, "cyclonedds.core.DDSStatus.PublicationMatched"]], "querycondition (class in cyclonedds.core)": [[2, "cyclonedds.core.QueryCondition"]], "read (cyclonedds.core.samplestate attribute)": [[2, "cyclonedds.core.SampleState.Read"]], "readcondition (class in cyclonedds.core)": [[2, "cyclonedds.core.ReadCondition"]], "requesteddeadlinemissed (cyclonedds.core.ddsstatus attribute)": [[2, "cyclonedds.core.DDSStatus.RequestedDeadlineMissed"]], "requestedincompatibleqos (cyclonedds.core.ddsstatus attribute)": [[2, "cyclonedds.core.DDSStatus.RequestedIncompatibleQos"]], "samplelost (cyclonedds.core.ddsstatus attribute)": [[2, "cyclonedds.core.DDSStatus.SampleLost"]], "samplerejected (cyclonedds.core.ddsstatus attribute)": [[2, "cyclonedds.core.DDSStatus.SampleRejected"]], "samplestate (class in cyclonedds.core)": [[2, "cyclonedds.core.SampleState"]], "statistics (class in cyclonedds.core)": [[2, "cyclonedds.core.Statistics"]], "subscriptionmatched (cyclonedds.core.ddsstatus attribute)": [[2, "cyclonedds.core.DDSStatus.SubscriptionMatched"]], "viewstate (class in cyclonedds.core)": [[2, "cyclonedds.core.ViewState"]], "waitset (class in cyclonedds.core)": [[2, "cyclonedds.core.WaitSet"]], "__init__() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.__init__"]], "__init__() (cyclonedds.core.guardcondition method)": [[2, "cyclonedds.core.GuardCondition.__init__"]], "__init__() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.__init__"]], "__init__() (cyclonedds.core.querycondition method)": [[2, "cyclonedds.core.QueryCondition.__init__"]], "__init__() (cyclonedds.core.readcondition method)": [[2, "cyclonedds.core.ReadCondition.__init__"]], "__init__() (cyclonedds.core.waitset method)": [[2, "cyclonedds.core.WaitSet.__init__"]], "attach() (cyclonedds.core.waitset method)": [[2, "cyclonedds.core.WaitSet.attach"]], "begin_coherent() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.begin_coherent"]], "children (cyclonedds.core.entity attribute)": [[2, "cyclonedds.core.Entity.children"]], "code (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.code"]], "copy() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.copy"]], "copy_to() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.copy_to"]], "count (cyclonedds.core.statistics attribute)": [[2, "cyclonedds.core.Statistics.count"]], "data (cyclonedds.core.statistics attribute)": [[2, "cyclonedds.core.Statistics.data"]], "datareader (cyclonedds.core.entity attribute)": [[2, "cyclonedds.core.Entity.datareader"]], "detach() (cyclonedds.core.waitset method)": [[2, "cyclonedds.core.WaitSet.detach"]], "domain_id (cyclonedds.core.entity attribute)": [[2, "cyclonedds.core.Entity.domain_id"]], "end_coherent() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.end_coherent"]], "entity (cyclonedds.core.statistics attribute)": [[2, "cyclonedds.core.Statistics.entity"]], "error_message_mapping (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.error_message_mapping"]], "get_children() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.get_children"]], "get_datareader() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.get_datareader"]], "get_domain_id() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.get_domain_id"]], "get_entities() (cyclonedds.core.waitset method)": [[2, "cyclonedds.core.WaitSet.get_entities"]], "get_entity() (cyclonedds.core.entity class method)": [[2, "cyclonedds.core.Entity.get_entity"]], "get_guid() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.get_guid"]], "get_instance_handle() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.get_instance_handle"]], "get_listener() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.get_listener"]], "get_parent() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.get_parent"]], "get_participant() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.get_participant"]], "get_publisher() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.get_publisher"]], "get_qos() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.get_qos"]], "get_status_changes() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.get_status_changes"]], "get_status_mask() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.get_status_mask"]], "get_subscriber() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.get_subscriber"]], "guid (cyclonedds.core.entity attribute)": [[2, "cyclonedds.core.Entity.guid"]], "instance_handle (cyclonedds.core.entity property)": [[2, "cyclonedds.core.Entity.instance_handle"]], "is_attached() (cyclonedds.core.waitset method)": [[2, "cyclonedds.core.WaitSet.is_attached"]], "merge() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.merge"]], "msg (cyclonedds.core.ddsexception attribute)": [[2, "cyclonedds.core.DDSException.msg"]], "on_data_available() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.on_data_available"]], "on_data_on_readers() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.on_data_on_readers"]], "on_inconsistent_topic() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.on_inconsistent_topic"]], "on_liveliness_changed() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.on_liveliness_changed"]], "on_liveliness_lost() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.on_liveliness_lost"]], "on_offered_deadline_missed() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.on_offered_deadline_missed"]], "on_offered_incompatible_qos() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.on_offered_incompatible_qos"]], "on_publication_matched() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.on_publication_matched"]], "on_requested_deadline_missed() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.on_requested_deadline_missed"]], "on_requested_incompatible_qos() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.on_requested_incompatible_qos"]], "on_sample_lost() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.on_sample_lost"]], "on_sample_rejected() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.on_sample_rejected"]], "on_subscription_matched() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.on_subscription_matched"]], "opaque (cyclonedds.core.statistics attribute)": [[2, "cyclonedds.core.Statistics.opaque"]], "parent (cyclonedds.core.entity attribute)": [[2, "cyclonedds.core.Entity.parent"]], "participant (cyclonedds.core.entity attribute)": [[2, "cyclonedds.core.Entity.participant"]], "publisher (cyclonedds.core.entity attribute)": [[2, "cyclonedds.core.Entity.publisher"]], "read() (cyclonedds.core.guardcondition method)": [[2, "cyclonedds.core.GuardCondition.read"]], "read_status() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.read_status"]], "refresh() (cyclonedds.core.statistics method)": [[2, "cyclonedds.core.Statistics.refresh"]], "reset() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.reset"]], "set() (cyclonedds.core.guardcondition method)": [[2, "cyclonedds.core.GuardCondition.set"]], "set_listener() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.set_listener"]], "set_on_data_available() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.set_on_data_available"]], "set_on_data_on_readers() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.set_on_data_on_readers"]], "set_on_inconsistent_topic() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.set_on_inconsistent_topic"]], "set_on_liveliness_changed() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.set_on_liveliness_changed"]], "set_on_liveliness_lost() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.set_on_liveliness_lost"]], "set_on_offered_deadline_missed() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.set_on_offered_deadline_missed"]], "set_on_offered_incompatible_qos() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.set_on_offered_incompatible_qos"]], "set_on_publication_matched() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.set_on_publication_matched"]], "set_on_requested_deadline_missed() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.set_on_requested_deadline_missed"]], "set_on_requested_incompatible_qos() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.set_on_requested_incompatible_qos"]], "set_on_sample_lost() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.set_on_sample_lost"]], "set_on_sample_rejected() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.set_on_sample_rejected"]], "set_on_subscription_matched() (cyclonedds.core.listener method)": [[2, "cyclonedds.core.Listener.set_on_subscription_matched"]], "set_qos() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.set_qos"]], "set_status_mask() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.set_status_mask"]], "set_trigger() (cyclonedds.core.waitset method)": [[2, "cyclonedds.core.WaitSet.set_trigger"]], "status_mask (cyclonedds.core.entity attribute)": [[2, "cyclonedds.core.Entity.status_mask"]], "subscriber (cyclonedds.core.entity attribute)": [[2, "cyclonedds.core.Entity.subscriber"]], "take() (cyclonedds.core.guardcondition method)": [[2, "cyclonedds.core.GuardCondition.take"]], "take_status() (cyclonedds.core.entity method)": [[2, "cyclonedds.core.Entity.take_status"]], "time (cyclonedds.core.statistics attribute)": [[2, "cyclonedds.core.Statistics.time"]], "wait() (cyclonedds.core.waitset method)": [[2, "cyclonedds.core.WaitSet.wait"]], "wait_async() (cyclonedds.core.waitset method)": [[2, "cyclonedds.core.WaitSet.wait_async"]], "wait_until() (cyclonedds.core.waitset method)": [[2, "cyclonedds.core.WaitSet.wait_until"]], "domain (class in cyclonedds.domain)": [[3, "cyclonedds.domain.Domain"]], "domainparticipant (class in cyclonedds.domain)": [[3, "cyclonedds.domain.DomainParticipant"]], "get_participants() (cyclonedds.domain.domain method)": [[3, "cyclonedds.domain.Domain.get_participants"]], "async_get_types_for_typeid() (in module cyclonedds.dynamic)": [[4, "cyclonedds.dynamic.async_get_types_for_typeid"]], "get_types_for_typeid() (in module cyclonedds.dynamic)": [[4, "cyclonedds.dynamic.get_types_for_typeid"]], "idlbitmask (class in cyclonedds.idl)": [[5, "cyclonedds.idl.IdlBitmask"]], "idlenum (class in cyclonedds.idl)": [[5, "cyclonedds.idl.IdlEnum"]], "idlstruct (class in cyclonedds.idl)": [[5, "cyclonedds.idl.IdlStruct"]], "idlunion (class in cyclonedds.idl)": [[5, "cyclonedds.idl.IdlUnion"]], "nonetype (in module cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.NoneType"]], "appendable() (in module cyclonedds.idl.annotations)": [[5, "cyclonedds.idl.annotations.appendable"]], "array (class in cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.array"]], "as_mask() (cyclonedds.idl.idlbitmask method)": [[5, "cyclonedds.idl.IdlBitmask.as_mask"]], "autoid() (in module cyclonedds.idl.annotations)": [[5, "cyclonedds.idl.annotations.autoid"]], "bit_bound() (in module cyclonedds.idl.annotations)": [[5, "cyclonedds.idl.annotations.bit_bound"]], "bounded_str (class in cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.bounded_str"]], "case (class in cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.case"]], "cdrv0() (in module cyclonedds.idl.annotations)": [[5, "cyclonedds.idl.annotations.cdrv0"]], "char (in module cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.char"]], "default (class in cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.default"]], "deserialize() (cyclonedds.idl.idlstruct class method)": [[5, "cyclonedds.idl.IdlStruct.deserialize"]], "deserialize() (cyclonedds.idl.idlunion class method)": [[5, "cyclonedds.idl.IdlUnion.deserialize"]], "deserialize_key() (cyclonedds.idl.idlstruct class method)": [[5, "cyclonedds.idl.IdlStruct.deserialize_key"]], "deserialize_key() (cyclonedds.idl.idlunion class method)": [[5, "cyclonedds.idl.IdlUnion.deserialize_key"]], "discriminator (cyclonedds.idl.idlunion property)": [[5, "cyclonedds.idl.IdlUnion.discriminator"]], "extensibility() (in module cyclonedds.idl.annotations)": [[5, "cyclonedds.idl.annotations.extensibility"]], "final() (in module cyclonedds.idl.annotations)": [[5, "cyclonedds.idl.annotations.final"]], "float32 (in module cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.float32"]], "float64 (in module cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.float64"]], "from_mask() (cyclonedds.idl.idlbitmask class method)": [[5, "cyclonedds.idl.IdlBitmask.from_mask"]], "get() (cyclonedds.idl.idlunion method)": [[5, "cyclonedds.idl.IdlUnion.get"]], "int16 (in module cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.int16"]], "int32 (in module cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.int32"]], "int64 (in module cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.int64"]], "int8 (in module cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.int8"]], "key() (in module cyclonedds.idl.annotations)": [[5, "cyclonedds.idl.annotations.key"]], "keylist() (in module cyclonedds.idl.annotations)": [[5, "cyclonedds.idl.annotations.keylist"]], "member_hash_id() (in module cyclonedds.idl.annotations)": [[5, "cyclonedds.idl.annotations.member_hash_id"]], "member_id() (in module cyclonedds.idl.annotations)": [[5, "cyclonedds.idl.annotations.member_id"]], "must_understand() (in module cyclonedds.idl.annotations)": [[5, "cyclonedds.idl.annotations.must_understand"]], "mutable() (in module cyclonedds.idl.annotations)": [[5, "cyclonedds.idl.annotations.mutable"]], "nested() (in module cyclonedds.idl.annotations)": [[5, "cyclonedds.idl.annotations.nested"]], "position() (in module cyclonedds.idl.annotations)": [[5, "cyclonedds.idl.annotations.position"]], "sequence (class in cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.sequence"]], "serialize() (cyclonedds.idl.idlstruct method)": [[5, "cyclonedds.idl.IdlStruct.serialize"]], "serialize() (cyclonedds.idl.idlunion method)": [[5, "cyclonedds.idl.IdlUnion.serialize"]], "serialize_key() (cyclonedds.idl.idlstruct method)": [[5, "cyclonedds.idl.IdlStruct.serialize_key"]], "set() (cyclonedds.idl.idlunion method)": [[5, "cyclonedds.idl.IdlUnion.set"]], "typedef (class in cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.typedef"]], "uint16 (in module cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.uint16"]], "uint32 (in module cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.uint32"]], "uint64 (in module cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.uint64"]], "uint8 (in module cyclonedds.idl.types)": [[5, "cyclonedds.idl.types.uint8"]], "value (cyclonedds.idl.idlunion property)": [[5, "cyclonedds.idl.IdlUnion.value"]], "xcdrv2() (in module cyclonedds.idl.annotations)": [[5, "cyclonedds.idl.annotations.xcdrv2"]], "dds (class in cyclonedds.internal)": [[6, "cyclonedds.internal.DDS"]], "sampleinfo (class in cyclonedds.internal)": [[6, "cyclonedds.internal.SampleInfo"]], "absolute_generation_rank (cyclonedds.internal.dds_c_t.sample_info attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_info.absolute_generation_rank"]], "alive_count (cyclonedds.internal.dds_c_t.liveliness_changed_status attribute)": [[6, "cyclonedds.internal.dds_c_t.liveliness_changed_status.alive_count"]], "alive_count_change (cyclonedds.internal.dds_c_t.liveliness_changed_status attribute)": [[6, "cyclonedds.internal.dds_c_t.liveliness_changed_status.alive_count_change"]], "as_python_guid() (cyclonedds.internal.dds_c_t.guid method)": [[6, "cyclonedds.internal.dds_c_t.guid.as_python_guid"]], "attach (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.attach"]], "buf (cyclonedds.internal.dds_c_t.sample_buffer attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_buffer.buf"]], "c_call() (in module cyclonedds.internal)": [[6, "cyclonedds.internal.c_call"]], "c_callable() (in module cyclonedds.internal)": [[6, "cyclonedds.internal.c_callable"]], "count (cyclonedds.internal.dds_c_t.statistics attribute)": [[6, "cyclonedds.internal.dds_c_t.statistics.count"]], "current_count (cyclonedds.internal.dds_c_t.publication_matched_status attribute)": [[6, "cyclonedds.internal.dds_c_t.publication_matched_status.current_count"]], "current_count (cyclonedds.internal.dds_c_t.subscription_matched_status attribute)": [[6, "cyclonedds.internal.dds_c_t.subscription_matched_status.current_count"]], "current_count_change (cyclonedds.internal.dds_c_t.publication_matched_status attribute)": [[6, "cyclonedds.internal.dds_c_t.publication_matched_status.current_count_change"]], "current_count_change (cyclonedds.internal.dds_c_t.subscription_matched_status attribute)": [[6, "cyclonedds.internal.dds_c_t.subscription_matched_status.current_count_change"]], "data_representation_id (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.data_representation_id"]], "dds_c_t (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t"]], "dds_c_t.guid (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t.guid"]], "dds_c_t.inconsistent_topic_status (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t.inconsistent_topic_status"]], "dds_c_t.liveliness_changed_status (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t.liveliness_changed_status"]], "dds_c_t.liveliness_lost_status (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t.liveliness_lost_status"]], "dds_c_t.offered_deadline_missed_status (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t.offered_deadline_missed_status"]], "dds_c_t.offered_incompatible_qos_status (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t.offered_incompatible_qos_status"]], "dds_c_t.publication_matched_status (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t.publication_matched_status"]], "dds_c_t.requested_deadline_missed_status (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t.requested_deadline_missed_status"]], "dds_c_t.requested_incompatible_qos_status (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t.requested_incompatible_qos_status"]], "dds_c_t.sample_buffer (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t.sample_buffer"]], "dds_c_t.sample_info (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t.sample_info"]], "dds_c_t.sample_lost_status (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t.sample_lost_status"]], "dds_c_t.sample_rejected_status (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t.sample_rejected_status"]], "dds_c_t.statistics (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t.statistics"]], "dds_c_t.subscription_matched_status (class in cyclonedds.internal)": [[6, "cyclonedds.internal.dds_c_t.subscription_matched_status"]], "destination_order (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.destination_order"]], "disposed_generation_count (cyclonedds.internal.dds_c_t.sample_info attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_info.disposed_generation_count"]], "domainid (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.domainid"]], "durability (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.durability"]], "duration (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.duration"]], "entity (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.entity"]], "entity (cyclonedds.internal.dds_c_t.statistics attribute)": [[6, "cyclonedds.internal.dds_c_t.statistics.entity"]], "generation_rank (cyclonedds.internal.dds_c_t.sample_info attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_info.generation_rank"]], "history (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.history"]], "ingnorelocal (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.ingnorelocal"]], "instance_handle (cyclonedds.internal.sampleinfo attribute)": [[6, "cyclonedds.internal.SampleInfo.instance_handle"]], "instance_handle (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.instance_handle"]], "instance_handle (cyclonedds.internal.dds_c_t.sample_info attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_info.instance_handle"]], "instance_state (cyclonedds.internal.sampleinfo attribute)": [[6, "cyclonedds.internal.SampleInfo.instance_state"]], "instance_state (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.instance_state"]], "instance_state (cyclonedds.internal.dds_c_t.sample_info attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_info.instance_state"]], "kv (cyclonedds.internal.dds_c_t.statistics attribute)": [[6, "cyclonedds.internal.dds_c_t.statistics.kv"]], "last_instance_handle (cyclonedds.internal.dds_c_t.offered_deadline_missed_status attribute)": [[6, "cyclonedds.internal.dds_c_t.offered_deadline_missed_status.last_instance_handle"]], "last_instance_handle (cyclonedds.internal.dds_c_t.requested_deadline_missed_status attribute)": [[6, "cyclonedds.internal.dds_c_t.requested_deadline_missed_status.last_instance_handle"]], "last_instance_handle (cyclonedds.internal.dds_c_t.sample_rejected_status attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_rejected_status.last_instance_handle"]], "last_policy_id (cyclonedds.internal.dds_c_t.offered_incompatible_qos_status attribute)": [[6, "cyclonedds.internal.dds_c_t.offered_incompatible_qos_status.last_policy_id"]], "last_policy_id (cyclonedds.internal.dds_c_t.requested_incompatible_qos_status attribute)": [[6, "cyclonedds.internal.dds_c_t.requested_incompatible_qos_status.last_policy_id"]], "last_publication_handle (cyclonedds.internal.dds_c_t.liveliness_changed_status attribute)": [[6, "cyclonedds.internal.dds_c_t.liveliness_changed_status.last_publication_handle"]], "last_publication_handle (cyclonedds.internal.dds_c_t.subscription_matched_status attribute)": [[6, "cyclonedds.internal.dds_c_t.subscription_matched_status.last_publication_handle"]], "last_reason (cyclonedds.internal.dds_c_t.sample_rejected_status attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_rejected_status.last_reason"]], "last_subscription_handle (cyclonedds.internal.dds_c_t.publication_matched_status attribute)": [[6, "cyclonedds.internal.dds_c_t.publication_matched_status.last_subscription_handle"]], "len (cyclonedds.internal.dds_c_t.sample_buffer attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_buffer.len"]], "listener_p (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.listener_p"]], "liveliness (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.liveliness"]], "load_cyclonedds() (in module cyclonedds.internal)": [[6, "cyclonedds.internal.load_cyclonedds"]], "no_writers_generation_count (cyclonedds.internal.dds_c_t.sample_info attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_info.no_writers_generation_count"]], "not_alive_count (cyclonedds.internal.dds_c_t.liveliness_changed_status attribute)": [[6, "cyclonedds.internal.dds_c_t.liveliness_changed_status.not_alive_count"]], "not_alive_count_change (cyclonedds.internal.dds_c_t.liveliness_changed_status attribute)": [[6, "cyclonedds.internal.dds_c_t.liveliness_changed_status.not_alive_count_change"]], "opaque (cyclonedds.internal.dds_c_t.statistics attribute)": [[6, "cyclonedds.internal.dds_c_t.statistics.opaque"]], "ownership (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.ownership"]], "presentation_access_scope (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.presentation_access_scope"]], "publication_handle (cyclonedds.internal.dds_c_t.sample_info attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_info.publication_handle"]], "qos_p (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.qos_p"]], "reliability (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.reliability"]], "returnv (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.returnv"]], "sample_rank (cyclonedds.internal.dds_c_t.sample_info attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_info.sample_rank"]], "sample_state (cyclonedds.internal.sampleinfo attribute)": [[6, "cyclonedds.internal.SampleInfo.sample_state"]], "sample_state (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_state"]], "sample_state (cyclonedds.internal.dds_c_t.sample_info attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_info.sample_state"]], "source_timestamp (cyclonedds.internal.sampleinfo attribute)": [[6, "cyclonedds.internal.SampleInfo.source_timestamp"]], "source_timestamp (cyclonedds.internal.dds_c_t.sample_info attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_info.source_timestamp"]], "stat_factory() (cyclonedds.internal.dds_c_t method)": [[6, "cyclonedds.internal.dds_c_t.stat_factory"]], "time (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.time"]], "time (cyclonedds.internal.dds_c_t.statistics attribute)": [[6, "cyclonedds.internal.dds_c_t.statistics.time"]], "topic_descriptor_p (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.topic_descriptor_p"]], "total_count (cyclonedds.internal.dds_c_t.inconsistent_topic_status attribute)": [[6, "cyclonedds.internal.dds_c_t.inconsistent_topic_status.total_count"]], "total_count (cyclonedds.internal.dds_c_t.liveliness_lost_status attribute)": [[6, "cyclonedds.internal.dds_c_t.liveliness_lost_status.total_count"]], "total_count (cyclonedds.internal.dds_c_t.offered_deadline_missed_status attribute)": [[6, "cyclonedds.internal.dds_c_t.offered_deadline_missed_status.total_count"]], "total_count (cyclonedds.internal.dds_c_t.offered_incompatible_qos_status attribute)": [[6, "cyclonedds.internal.dds_c_t.offered_incompatible_qos_status.total_count"]], "total_count (cyclonedds.internal.dds_c_t.publication_matched_status attribute)": [[6, "cyclonedds.internal.dds_c_t.publication_matched_status.total_count"]], "total_count (cyclonedds.internal.dds_c_t.requested_deadline_missed_status attribute)": [[6, "cyclonedds.internal.dds_c_t.requested_deadline_missed_status.total_count"]], "total_count (cyclonedds.internal.dds_c_t.requested_incompatible_qos_status attribute)": [[6, "cyclonedds.internal.dds_c_t.requested_incompatible_qos_status.total_count"]], "total_count (cyclonedds.internal.dds_c_t.sample_lost_status attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_lost_status.total_count"]], "total_count (cyclonedds.internal.dds_c_t.sample_rejected_status attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_rejected_status.total_count"]], "total_count (cyclonedds.internal.dds_c_t.subscription_matched_status attribute)": [[6, "cyclonedds.internal.dds_c_t.subscription_matched_status.total_count"]], "total_count_change (cyclonedds.internal.dds_c_t.inconsistent_topic_status attribute)": [[6, "cyclonedds.internal.dds_c_t.inconsistent_topic_status.total_count_change"]], "total_count_change (cyclonedds.internal.dds_c_t.liveliness_lost_status attribute)": [[6, "cyclonedds.internal.dds_c_t.liveliness_lost_status.total_count_change"]], "total_count_change (cyclonedds.internal.dds_c_t.offered_deadline_missed_status attribute)": [[6, "cyclonedds.internal.dds_c_t.offered_deadline_missed_status.total_count_change"]], "total_count_change (cyclonedds.internal.dds_c_t.offered_incompatible_qos_status attribute)": [[6, "cyclonedds.internal.dds_c_t.offered_incompatible_qos_status.total_count_change"]], "total_count_change (cyclonedds.internal.dds_c_t.publication_matched_status attribute)": [[6, "cyclonedds.internal.dds_c_t.publication_matched_status.total_count_change"]], "total_count_change (cyclonedds.internal.dds_c_t.requested_deadline_missed_status attribute)": [[6, "cyclonedds.internal.dds_c_t.requested_deadline_missed_status.total_count_change"]], "total_count_change (cyclonedds.internal.dds_c_t.requested_incompatible_qos_status attribute)": [[6, "cyclonedds.internal.dds_c_t.requested_incompatible_qos_status.total_count_change"]], "total_count_change (cyclonedds.internal.dds_c_t.sample_lost_status attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_lost_status.total_count_change"]], "total_count_change (cyclonedds.internal.dds_c_t.sample_rejected_status attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_rejected_status.total_count_change"]], "total_count_change (cyclonedds.internal.dds_c_t.subscription_matched_status attribute)": [[6, "cyclonedds.internal.dds_c_t.subscription_matched_status.total_count_change"]], "type_consistency (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.type_consistency"]], "v (cyclonedds.internal.dds_c_t.guid attribute)": [[6, "cyclonedds.internal.dds_c_t.guid.v"]], "valid_data (cyclonedds.internal.dds_c_t.sample_info attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_info.valid_data"]], "view_state (cyclonedds.internal.sampleinfo attribute)": [[6, "cyclonedds.internal.SampleInfo.view_state"]], "view_state (cyclonedds.internal.dds_c_t attribute)": [[6, "cyclonedds.internal.dds_c_t.view_state"]], "view_state (cyclonedds.internal.dds_c_t.sample_info attribute)": [[6, "cyclonedds.internal.dds_c_t.sample_info.view_state"]], "datawriter (class in cyclonedds.pub)": [[7, "cyclonedds.pub.DataWriter"]], "publisher (class in cyclonedds.pub)": [[7, "cyclonedds.pub.Publisher"]], "dispose() (cyclonedds.pub.datawriter method)": [[7, "cyclonedds.pub.DataWriter.dispose"]], "dispose_instance_handle() (cyclonedds.pub.datawriter method)": [[7, "cyclonedds.pub.DataWriter.dispose_instance_handle"]], "get_liveliness_lost_status() (cyclonedds.pub.datawriter method)": [[7, "cyclonedds.pub.DataWriter.get_liveliness_lost_status"]], "get_matched_subscription_data() (cyclonedds.pub.datawriter method)": [[7, "cyclonedds.pub.DataWriter.get_matched_subscription_data"]], "get_matched_subscriptions() (cyclonedds.pub.datawriter method)": [[7, "cyclonedds.pub.DataWriter.get_matched_subscriptions"]], "get_offered_deadline_missed_status() (cyclonedds.pub.datawriter method)": [[7, "cyclonedds.pub.DataWriter.get_offered_deadline_missed_status"]], "get_offered_incompatible_qos_status() (cyclonedds.pub.datawriter method)": [[7, "cyclonedds.pub.DataWriter.get_offered_incompatible_qos_status"]], "get_publication_matched_status() (cyclonedds.pub.datawriter method)": [[7, "cyclonedds.pub.DataWriter.get_publication_matched_status"]], "lookup_instance() (cyclonedds.pub.datawriter method)": [[7, "cyclonedds.pub.DataWriter.lookup_instance"]], "matched_sub (cyclonedds.pub.datawriter property)": [[7, "cyclonedds.pub.DataWriter.matched_sub"]], "register_instance() (cyclonedds.pub.datawriter method)": [[7, "cyclonedds.pub.DataWriter.register_instance"]], "resume() (cyclonedds.pub.publisher method)": [[7, "cyclonedds.pub.Publisher.resume"]], "suspend() (cyclonedds.pub.publisher method)": [[7, "cyclonedds.pub.Publisher.suspend"]], "topic (cyclonedds.pub.datawriter property)": [[7, "cyclonedds.pub.DataWriter.topic"]], "unregister_instance() (cyclonedds.pub.datawriter method)": [[7, "cyclonedds.pub.DataWriter.unregister_instance"]], "unregister_instance_handle() (cyclonedds.pub.datawriter method)": [[7, "cyclonedds.pub.DataWriter.unregister_instance_handle"]], "wait_for_acks() (cyclonedds.pub.datawriter method)": [[7, "cyclonedds.pub.DataWriter.wait_for_acks"]], "wait_for_acks() (cyclonedds.pub.publisher method)": [[7, "cyclonedds.pub.Publisher.wait_for_acks"]], "write() (cyclonedds.pub.datawriter method)": [[7, "cyclonedds.pub.DataWriter.write"]], "write_dispose() (cyclonedds.pub.datawriter method)": [[7, "cyclonedds.pub.DataWriter.write_dispose"]], "allowtypecoercion (cyclonedds.core.policy.typeconsistency attribute)": [[8, "cyclonedds.core.Policy.TypeConsistency.AllowTypeCoercion"]], "automatic (cyclonedds.core.policy.liveliness attribute)": [[8, "cyclonedds.core.Policy.Liveliness.Automatic"]], "disallowtypecoercion (cyclonedds.core.policy.typeconsistency attribute)": [[8, "cyclonedds.core.Policy.TypeConsistency.DisallowTypeCoercion"]], "exclusive (cyclonedds.core.policy.ownership attribute)": [[8, "cyclonedds.core.Policy.Ownership.Exclusive"]], "group (cyclonedds.core.policy.presentationaccessscope attribute)": [[8, "cyclonedds.core.Policy.PresentationAccessScope.Group"]], "instance (cyclonedds.core.policy.presentationaccessscope attribute)": [[8, "cyclonedds.core.Policy.PresentationAccessScope.Instance"]], "keepall (cyclonedds.core.policy.history attribute)": [[8, "cyclonedds.core.Policy.History.KeepAll"]], "keeplast (cyclonedds.core.policy.history attribute)": [[8, "cyclonedds.core.Policy.History.KeepLast"]], "manualbyparticipant (cyclonedds.core.policy.liveliness attribute)": [[8, "cyclonedds.core.Policy.Liveliness.ManualByParticipant"]], "manualbytopic (cyclonedds.core.policy.liveliness attribute)": [[8, "cyclonedds.core.Policy.Liveliness.ManualByTopic"]], "policy (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy"]], "policy.binaryproperty (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.BinaryProperty"]], "policy.datarepresentation (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.DataRepresentation"]], "policy.deadline (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.Deadline"]], "policy.destinationorder (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.DestinationOrder"]], "policy.durability (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.Durability"]], "policy.durabilityservice (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.DurabilityService"]], "policy.entityname (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.EntityName"]], "policy.groupdata (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.Groupdata"]], "policy.history (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.History"]], "policy.ignorelocal (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.IgnoreLocal"]], "policy.latencybudget (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.LatencyBudget"]], "policy.lifespan (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.Lifespan"]], "policy.liveliness (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.Liveliness"]], "policy.ownership (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.Ownership"]], "policy.ownershipstrength (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.OwnershipStrength"]], "policy.partition (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.Partition"]], "policy.presentationaccessscope (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.PresentationAccessScope"]], "policy.property (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.Property"]], "policy.readerdatalifecycle (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.ReaderDataLifecycle"]], "policy.reliability (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.Reliability"]], "policy.resourcelimits (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.ResourceLimits"]], "policy.timebasedfilter (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.TimeBasedFilter"]], "policy.topicdata (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.Topicdata"]], "policy.transportpriority (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.TransportPriority"]], "policy.typeconsistency (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.TypeConsistency"]], "policy.userdata (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.Userdata"]], "policy.writerdatalifecycle (class in cyclonedds.core)": [[8, "cyclonedds.core.Policy.WriterDataLifecycle"]], "qos (class in cyclonedds.core)": [[8, "cyclonedds.core.Qos"]], "reliable (cyclonedds.core.policy.reliability attribute)": [[8, "cyclonedds.core.Policy.Reliability.Reliable"]], "shared (cyclonedds.core.policy.ownership attribute)": [[8, "cyclonedds.core.Policy.Ownership.Shared"]], "topic (cyclonedds.core.policy.presentationaccessscope attribute)": [[8, "cyclonedds.core.Policy.PresentationAccessScope.Topic"]], "__init__() (cyclonedds.core.qos method)": [[8, "cyclonedds.core.Qos.__init__"]], "asdict() (cyclonedds.core.qos method)": [[8, "cyclonedds.core.Qos.asdict"]], "autodispose (cyclonedds.core.policy.writerdatalifecycle attribute)": [[8, "cyclonedds.core.Policy.WriterDataLifecycle.autodispose"]], "autopurge_disposed_samples_delay (cyclonedds.core.policy.readerdatalifecycle attribute)": [[8, "cyclonedds.core.Policy.ReaderDataLifecycle.autopurge_disposed_samples_delay"]], "autopurge_nowriter_samples_delay (cyclonedds.core.policy.readerdatalifecycle attribute)": [[8, "cyclonedds.core.Policy.ReaderDataLifecycle.autopurge_nowriter_samples_delay"]], "cleanup_delay (cyclonedds.core.policy.durabilityservice attribute)": [[8, "cyclonedds.core.Policy.DurabilityService.cleanup_delay"]], "deadline (cyclonedds.core.policy.deadline attribute)": [[8, "cyclonedds.core.Policy.Deadline.deadline"]], "filter_time (cyclonedds.core.policy.timebasedfilter attribute)": [[8, "cyclonedds.core.Policy.TimeBasedFilter.filter_time"]], "fromdict() (cyclonedds.core.qos class method)": [[8, "cyclonedds.core.Qos.fromdict"]], "history (cyclonedds.core.policy.durabilityservice attribute)": [[8, "cyclonedds.core.Policy.DurabilityService.history"]], "lifespan (cyclonedds.core.policy.lifespan attribute)": [[8, "cyclonedds.core.Policy.Lifespan.lifespan"]], "max_instances (cyclonedds.core.policy.durabilityservice attribute)": [[8, "cyclonedds.core.Policy.DurabilityService.max_instances"]], "max_instances (cyclonedds.core.policy.resourcelimits attribute)": [[8, "cyclonedds.core.Policy.ResourceLimits.max_instances"]], "max_samples (cyclonedds.core.policy.durabilityservice attribute)": [[8, "cyclonedds.core.Policy.DurabilityService.max_samples"]], "max_samples (cyclonedds.core.policy.resourcelimits attribute)": [[8, "cyclonedds.core.Policy.ResourceLimits.max_samples"]], "max_samples_per_instance (cyclonedds.core.policy.durabilityservice attribute)": [[8, "cyclonedds.core.Policy.DurabilityService.max_samples_per_instance"]], "max_samples_per_instance (cyclonedds.core.policy.resourcelimits attribute)": [[8, "cyclonedds.core.Policy.ResourceLimits.max_samples_per_instance"]], "partitions (cyclonedds.core.policy.partition attribute)": [[8, "cyclonedds.core.Policy.Partition.partitions"]], "policies (cyclonedds.core.qos attribute)": [[8, "cyclonedds.core.Qos.policies"]], "priority (cyclonedds.core.policy.transportpriority attribute)": [[8, "cyclonedds.core.Policy.TransportPriority.priority"]], "datareader (class in cyclonedds.sub)": [[9, "cyclonedds.sub.DataReader"]], "subscriber (class in cyclonedds.sub)": [[9, "cyclonedds.sub.Subscriber"]], "get_liveliness_changed_status() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.get_liveliness_changed_status"]], "get_matched_publication_data() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.get_matched_publication_data"]], "get_matched_publications() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.get_matched_publications"]], "get_requested_deadline_missed_status() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.get_requested_deadline_missed_status"]], "get_requested_incompatible_qos_status() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.get_requested_incompatible_qos_status"]], "get_sample_lost_status() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.get_sample_lost_status"]], "get_sample_rejected_status() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.get_sample_rejected_status"]], "get_subscription_matched_status() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.get_subscription_matched_status"]], "lookup_instance() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.lookup_instance"]], "matched_pub (cyclonedds.sub.datareader property)": [[9, "cyclonedds.sub.DataReader.matched_pub"]], "notify_readers() (cyclonedds.sub.subscriber method)": [[9, "cyclonedds.sub.Subscriber.notify_readers"]], "read() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.read"]], "read_aiter() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.read_aiter"]], "read_iter() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.read_iter"]], "read_next() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.read_next"]], "read_one() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.read_one"]], "take() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.take"]], "take_aiter() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.take_aiter"]], "take_iter() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.take_iter"]], "take_next() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.take_next"]], "take_one() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.take_one"]], "topic (cyclonedds.sub.datareader property)": [[9, "cyclonedds.sub.DataReader.topic"]], "wait_for_historical_data() (cyclonedds.sub.datareader method)": [[9, "cyclonedds.sub.DataReader.wait_for_historical_data"]], "topic (class in cyclonedds.topic)": [[10, "cyclonedds.topic.Topic"]], "get_inconsistent_topic_status() (cyclonedds.topic.topic method)": [[10, "cyclonedds.topic.Topic.get_inconsistent_topic_status"]], "get_name() (cyclonedds.topic.topic method)": [[10, "cyclonedds.topic.Topic.get_name"]], "get_type_name() (cyclonedds.topic.topic method)": [[10, "cyclonedds.topic.Topic.get_type_name"]], "name (cyclonedds.topic.topic property)": [[10, "cyclonedds.topic.Topic.name"]], "set_c_topic_filter() (cyclonedds.topic.topic method)": [[10, "cyclonedds.topic.Topic.set_c_topic_filter"]], "set_topic_filter() (cyclonedds.topic.topic method)": [[10, "cyclonedds.topic.Topic.set_topic_filter"]], "typename (cyclonedds.topic.topic property)": [[10, "cyclonedds.topic.Topic.typename"]], "duration() (in module cyclonedds.util)": [[11, "cyclonedds.util.duration"]], "isgoodentity() (in module cyclonedds.util)": [[11, "cyclonedds.util.isgoodentity"]], "now() (in module cyclonedds.util.timestamp)": [[11, "cyclonedds.util.timestamp.now"]]}})